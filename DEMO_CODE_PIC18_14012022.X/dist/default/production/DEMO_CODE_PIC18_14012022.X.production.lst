

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jan 16 22:01:07 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67J10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F67J10 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     
    75                           	psect	idataCOMRAM
    76   01086A                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _buffer_max_size
    80   01086A  0020               	dw	32
    81                           
    82                           	psect	mediumconst
    83   00FDD4                     __pmediumconst:
    84                           	callstack 0
    85   00FDD4  00                 	db	0
    86   00FDD5                     _aucCRCLo:
    87                           	callstack 0
    88   00FDD5  00                 	db	0
    89   00FDD6  C0                 	db	192
    90   00FDD7  C1                 	db	193
    91   00FDD8  01                 	db	1
    92   00FDD9  C3                 	db	195
    93   00FDDA  03                 	db	3
    94   00FDDB  02                 	db	2
    95   00FDDC  C2                 	db	194
    96   00FDDD  C6                 	db	198
    97   00FDDE  06                 	db	6
    98   00FDDF  07                 	db	7
    99   00FDE0  C7                 	db	199
   100   00FDE1  05                 	db	5
   101   00FDE2  C5                 	db	197
   102   00FDE3  C4                 	db	196
   103   00FDE4  04                 	db	4
   104   00FDE5  CC                 	db	204
   105   00FDE6  0C                 	db	12
   106   00FDE7  0D                 	db	13
   107   00FDE8  CD                 	db	205
   108   00FDE9  0F                 	db	15
   109   00FDEA  CF                 	db	207
   110   00FDEB  CE                 	db	206
   111   00FDEC  0E                 	db	14
   112   00FDED  0A                 	db	10
   113   00FDEE  CA                 	db	202
   114   00FDEF  CB                 	db	203
   115   00FDF0  0B                 	db	11
   116   00FDF1  C9                 	db	201
   117   00FDF2  09                 	db	9
   118   00FDF3  08                 	db	8
   119   00FDF4  C8                 	db	200
   120   00FDF5  D8                 	db	216
   121   00FDF6  18                 	db	24
   122   00FDF7  19                 	db	25
   123   00FDF8  D9                 	db	217
   124   00FDF9  1B                 	db	27
   125   00FDFA  DB                 	db	219
   126   00FDFB  DA                 	db	218
   127   00FDFC  1A                 	db	26
   128   00FDFD  1E                 	db	30
   129   00FDFE  DE                 	db	222
   130   00FDFF  DF                 	db	223
   131   00FE00  1F                 	db	31
   132   00FE01  DD                 	db	221
   133   00FE02  1D                 	db	29
   134   00FE03  1C                 	db	28
   135   00FE04  DC                 	db	220
   136   00FE05  14                 	db	20
   137   00FE06  D4                 	db	212
   138   00FE07  D5                 	db	213
   139   00FE08  15                 	db	21
   140   00FE09  D7                 	db	215
   141   00FE0A  17                 	db	23
   142   00FE0B  16                 	db	22
   143   00FE0C  D6                 	db	214
   144   00FE0D  D2                 	db	210
   145   00FE0E  12                 	db	18
   146   00FE0F  13                 	db	19
   147   00FE10  D3                 	db	211
   148   00FE11  11                 	db	17
   149   00FE12  D1                 	db	209
   150   00FE13  D0                 	db	208
   151   00FE14  10                 	db	16
   152   00FE15  F0                 	db	240
   153   00FE16  30                 	db	48
   154   00FE17  31                 	db	49
   155   00FE18  F1                 	db	241
   156   00FE19  33                 	db	51
   157   00FE1A  F3                 	db	243
   158   00FE1B  F2                 	db	242
   159   00FE1C  32                 	db	50
   160   00FE1D  36                 	db	54
   161   00FE1E  F6                 	db	246
   162   00FE1F  F7                 	db	247
   163   00FE20  37                 	db	55
   164   00FE21  F5                 	db	245
   165   00FE22  35                 	db	53
   166   00FE23  34                 	db	52
   167   00FE24  F4                 	db	244
   168   00FE25  3C                 	db	60
   169   00FE26  FC                 	db	252
   170   00FE27  FD                 	db	253
   171   00FE28  3D                 	db	61
   172   00FE29  FF                 	db	255
   173   00FE2A  3F                 	db	63
   174   00FE2B  3E                 	db	62
   175   00FE2C  FE                 	db	254
   176   00FE2D  FA                 	db	250
   177   00FE2E  3A                 	db	58
   178   00FE2F  3B                 	db	59
   179   00FE30  FB                 	db	251
   180   00FE31  39                 	db	57
   181   00FE32  F9                 	db	249
   182   00FE33  F8                 	db	248
   183   00FE34  38                 	db	56
   184   00FE35  28                 	db	40
   185   00FE36  E8                 	db	232
   186   00FE37  E9                 	db	233
   187   00FE38  29                 	db	41
   188   00FE39  EB                 	db	235
   189   00FE3A  2B                 	db	43
   190   00FE3B  2A                 	db	42
   191   00FE3C  EA                 	db	234
   192   00FE3D  EE                 	db	238
   193   00FE3E  2E                 	db	46
   194   00FE3F  2F                 	db	47
   195   00FE40  EF                 	db	239
   196   00FE41  2D                 	db	45
   197   00FE42  ED                 	db	237
   198   00FE43  EC                 	db	236
   199   00FE44  2C                 	db	44
   200   00FE45  E4                 	db	228
   201   00FE46  24                 	db	36
   202   00FE47  25                 	db	37
   203   00FE48  E5                 	db	229
   204   00FE49  27                 	db	39
   205   00FE4A  E7                 	db	231
   206   00FE4B  E6                 	db	230
   207   00FE4C  26                 	db	38
   208   00FE4D  22                 	db	34
   209   00FE4E  E2                 	db	226
   210   00FE4F  E3                 	db	227
   211   00FE50  23                 	db	35
   212   00FE51  E1                 	db	225
   213   00FE52  21                 	db	33
   214   00FE53  20                 	db	32
   215   00FE54  E0                 	db	224
   216   00FE55  A0                 	db	160
   217   00FE56  60                 	db	96
   218   00FE57  61                 	db	97
   219   00FE58  A1                 	db	161
   220   00FE59  63                 	db	99
   221   00FE5A  A3                 	db	163
   222   00FE5B  A2                 	db	162
   223   00FE5C  62                 	db	98
   224   00FE5D  66                 	db	102
   225   00FE5E  A6                 	db	166
   226   00FE5F  A7                 	db	167
   227   00FE60  67                 	db	103
   228   00FE61  A5                 	db	165
   229   00FE62  65                 	db	101
   230   00FE63  64                 	db	100
   231   00FE64  A4                 	db	164
   232   00FE65  6C                 	db	108
   233   00FE66  AC                 	db	172
   234   00FE67  AD                 	db	173
   235   00FE68  6D                 	db	109
   236   00FE69  AF                 	db	175
   237   00FE6A  6F                 	db	111
   238   00FE6B  6E                 	db	110
   239   00FE6C  AE                 	db	174
   240   00FE6D  AA                 	db	170
   241   00FE6E  6A                 	db	106
   242   00FE6F  6B                 	db	107
   243   00FE70  AB                 	db	171
   244   00FE71  69                 	db	105
   245   00FE72  A9                 	db	169
   246   00FE73  A8                 	db	168
   247   00FE74  68                 	db	104
   248   00FE75  78                 	db	120
   249   00FE76  B8                 	db	184
   250   00FE77  B9                 	db	185
   251   00FE78  79                 	db	121
   252   00FE79  BB                 	db	187
   253   00FE7A  7B                 	db	123
   254   00FE7B  7A                 	db	122
   255   00FE7C  BA                 	db	186
   256   00FE7D  BE                 	db	190
   257   00FE7E  7E                 	db	126
   258   00FE7F  7F                 	db	127
   259   00FE80  BF                 	db	191
   260   00FE81  7D                 	db	125
   261   00FE82  BD                 	db	189
   262   00FE83  BC                 	db	188
   263   00FE84  7C                 	db	124
   264   00FE85  B4                 	db	180
   265   00FE86  74                 	db	116
   266   00FE87  75                 	db	117
   267   00FE88  B5                 	db	181
   268   00FE89  77                 	db	119
   269   00FE8A  B7                 	db	183
   270   00FE8B  B6                 	db	182
   271   00FE8C  76                 	db	118
   272   00FE8D  72                 	db	114
   273   00FE8E  B2                 	db	178
   274   00FE8F  B3                 	db	179
   275   00FE90  73                 	db	115
   276   00FE91  B1                 	db	177
   277   00FE92  71                 	db	113
   278   00FE93  70                 	db	112
   279   00FE94  B0                 	db	176
   280   00FE95  50                 	db	80
   281   00FE96  90                 	db	144
   282   00FE97  91                 	db	145
   283   00FE98  51                 	db	81
   284   00FE99  93                 	db	147
   285   00FE9A  53                 	db	83
   286   00FE9B  52                 	db	82
   287   00FE9C  92                 	db	146
   288   00FE9D  96                 	db	150
   289   00FE9E  56                 	db	86
   290   00FE9F  57                 	db	87
   291   00FEA0  97                 	db	151
   292   00FEA1  55                 	db	85
   293   00FEA2  95                 	db	149
   294   00FEA3  94                 	db	148
   295   00FEA4  54                 	db	84
   296   00FEA5  9C                 	db	156
   297   00FEA6  5C                 	db	92
   298   00FEA7  5D                 	db	93
   299   00FEA8  9D                 	db	157
   300   00FEA9  5F                 	db	95
   301   00FEAA  9F                 	db	159
   302   00FEAB  9E                 	db	158
   303   00FEAC  5E                 	db	94
   304   00FEAD  5A                 	db	90
   305   00FEAE  9A                 	db	154
   306   00FEAF  9B                 	db	155
   307   00FEB0  5B                 	db	91
   308   00FEB1  99                 	db	153
   309   00FEB2  59                 	db	89
   310   00FEB3  58                 	db	88
   311   00FEB4  98                 	db	152
   312   00FEB5  88                 	db	136
   313   00FEB6  48                 	db	72
   314   00FEB7  49                 	db	73
   315   00FEB8  89                 	db	137
   316   00FEB9  4B                 	db	75
   317   00FEBA  8B                 	db	139
   318   00FEBB  8A                 	db	138
   319   00FEBC  4A                 	db	74
   320   00FEBD  4E                 	db	78
   321   00FEBE  8E                 	db	142
   322   00FEBF  8F                 	db	143
   323   00FEC0  4F                 	db	79
   324   00FEC1  8D                 	db	141
   325   00FEC2  4D                 	db	77
   326   00FEC3  4C                 	db	76
   327   00FEC4  8C                 	db	140
   328   00FEC5  44                 	db	68
   329   00FEC6  84                 	db	132
   330   00FEC7  85                 	db	133
   331   00FEC8  45                 	db	69
   332   00FEC9  87                 	db	135
   333   00FECA  47                 	db	71
   334   00FECB  46                 	db	70
   335   00FECC  86                 	db	134
   336   00FECD  82                 	db	130
   337   00FECE  42                 	db	66
   338   00FECF  43                 	db	67
   339   00FED0  83                 	db	131
   340   00FED1  41                 	db	65
   341   00FED2  81                 	db	129
   342   00FED3  80                 	db	128
   343   00FED4  40                 	db	64
   344   00FED5                     __end_of_aucCRCLo:
   345                           	callstack 0
   346   00FED5                     _aucCRCHi:
   347                           	callstack 0
   348   00FED5  00                 	db	0
   349   00FED6  C1                 	db	193
   350   00FED7  81                 	db	129
   351   00FED8  40                 	db	64
   352   00FED9  01                 	db	1
   353   00FEDA  C0                 	db	192
   354   00FEDB  80                 	db	128
   355   00FEDC  41                 	db	65
   356   00FEDD  01                 	db	1
   357   00FEDE  C0                 	db	192
   358   00FEDF  80                 	db	128
   359   00FEE0  41                 	db	65
   360   00FEE1  00                 	db	0
   361   00FEE2  C1                 	db	193
   362   00FEE3  81                 	db	129
   363   00FEE4  40                 	db	64
   364   00FEE5  01                 	db	1
   365   00FEE6  C0                 	db	192
   366   00FEE7  80                 	db	128
   367   00FEE8  41                 	db	65
   368   00FEE9  00                 	db	0
   369   00FEEA  C1                 	db	193
   370   00FEEB  81                 	db	129
   371   00FEEC  40                 	db	64
   372   00FEED  00                 	db	0
   373   00FEEE  C1                 	db	193
   374   00FEEF  81                 	db	129
   375   00FEF0  40                 	db	64
   376   00FEF1  01                 	db	1
   377   00FEF2  C0                 	db	192
   378   00FEF3  80                 	db	128
   379   00FEF4  41                 	db	65
   380   00FEF5  01                 	db	1
   381   00FEF6  C0                 	db	192
   382   00FEF7  80                 	db	128
   383   00FEF8  41                 	db	65
   384   00FEF9  00                 	db	0
   385   00FEFA  C1                 	db	193
   386   00FEFB  81                 	db	129
   387   00FEFC  40                 	db	64
   388   00FEFD  00                 	db	0
   389   00FEFE  C1                 	db	193
   390   00FEFF  81                 	db	129
   391   00FF00  40                 	db	64
   392   00FF01  01                 	db	1
   393   00FF02  C0                 	db	192
   394   00FF03  80                 	db	128
   395   00FF04  41                 	db	65
   396   00FF05  00                 	db	0
   397   00FF06  C1                 	db	193
   398   00FF07  81                 	db	129
   399   00FF08  40                 	db	64
   400   00FF09  01                 	db	1
   401   00FF0A  C0                 	db	192
   402   00FF0B  80                 	db	128
   403   00FF0C  41                 	db	65
   404   00FF0D  01                 	db	1
   405   00FF0E  C0                 	db	192
   406   00FF0F  80                 	db	128
   407   00FF10  41                 	db	65
   408   00FF11  00                 	db	0
   409   00FF12  C1                 	db	193
   410   00FF13  81                 	db	129
   411   00FF14  40                 	db	64
   412   00FF15  01                 	db	1
   413   00FF16  C0                 	db	192
   414   00FF17  80                 	db	128
   415   00FF18  41                 	db	65
   416   00FF19  00                 	db	0
   417   00FF1A  C1                 	db	193
   418   00FF1B  81                 	db	129
   419   00FF1C  40                 	db	64
   420   00FF1D  00                 	db	0
   421   00FF1E  C1                 	db	193
   422   00FF1F  81                 	db	129
   423   00FF20  40                 	db	64
   424   00FF21  01                 	db	1
   425   00FF22  C0                 	db	192
   426   00FF23  80                 	db	128
   427   00FF24  41                 	db	65
   428   00FF25  00                 	db	0
   429   00FF26  C1                 	db	193
   430   00FF27  81                 	db	129
   431   00FF28  40                 	db	64
   432   00FF29  01                 	db	1
   433   00FF2A  C0                 	db	192
   434   00FF2B  80                 	db	128
   435   00FF2C  41                 	db	65
   436   00FF2D  01                 	db	1
   437   00FF2E  C0                 	db	192
   438   00FF2F  80                 	db	128
   439   00FF30  41                 	db	65
   440   00FF31  00                 	db	0
   441   00FF32  C1                 	db	193
   442   00FF33  81                 	db	129
   443   00FF34  40                 	db	64
   444   00FF35  00                 	db	0
   445   00FF36  C1                 	db	193
   446   00FF37  81                 	db	129
   447   00FF38  40                 	db	64
   448   00FF39  01                 	db	1
   449   00FF3A  C0                 	db	192
   450   00FF3B  80                 	db	128
   451   00FF3C  41                 	db	65
   452   00FF3D  01                 	db	1
   453   00FF3E  C0                 	db	192
   454   00FF3F  80                 	db	128
   455   00FF40  41                 	db	65
   456   00FF41  00                 	db	0
   457   00FF42  C1                 	db	193
   458   00FF43  81                 	db	129
   459   00FF44  40                 	db	64
   460   00FF45  01                 	db	1
   461   00FF46  C0                 	db	192
   462   00FF47  80                 	db	128
   463   00FF48  41                 	db	65
   464   00FF49  00                 	db	0
   465   00FF4A  C1                 	db	193
   466   00FF4B  81                 	db	129
   467   00FF4C  40                 	db	64
   468   00FF4D  00                 	db	0
   469   00FF4E  C1                 	db	193
   470   00FF4F  81                 	db	129
   471   00FF50  40                 	db	64
   472   00FF51  01                 	db	1
   473   00FF52  C0                 	db	192
   474   00FF53  80                 	db	128
   475   00FF54  41                 	db	65
   476   00FF55  01                 	db	1
   477   00FF56  C0                 	db	192
   478   00FF57  80                 	db	128
   479   00FF58  41                 	db	65
   480   00FF59  00                 	db	0
   481   00FF5A  C1                 	db	193
   482   00FF5B  81                 	db	129
   483   00FF5C  40                 	db	64
   484   00FF5D  00                 	db	0
   485   00FF5E  C1                 	db	193
   486   00FF5F  81                 	db	129
   487   00FF60  40                 	db	64
   488   00FF61  01                 	db	1
   489   00FF62  C0                 	db	192
   490   00FF63  80                 	db	128
   491   00FF64  41                 	db	65
   492   00FF65  00                 	db	0
   493   00FF66  C1                 	db	193
   494   00FF67  81                 	db	129
   495   00FF68  40                 	db	64
   496   00FF69  01                 	db	1
   497   00FF6A  C0                 	db	192
   498   00FF6B  80                 	db	128
   499   00FF6C  41                 	db	65
   500   00FF6D  01                 	db	1
   501   00FF6E  C0                 	db	192
   502   00FF6F  80                 	db	128
   503   00FF70  41                 	db	65
   504   00FF71  00                 	db	0
   505   00FF72  C1                 	db	193
   506   00FF73  81                 	db	129
   507   00FF74  40                 	db	64
   508   00FF75  00                 	db	0
   509   00FF76  C1                 	db	193
   510   00FF77  81                 	db	129
   511   00FF78  40                 	db	64
   512   00FF79  01                 	db	1
   513   00FF7A  C0                 	db	192
   514   00FF7B  80                 	db	128
   515   00FF7C  41                 	db	65
   516   00FF7D  01                 	db	1
   517   00FF7E  C0                 	db	192
   518   00FF7F  80                 	db	128
   519   00FF80  41                 	db	65
   520   00FF81  00                 	db	0
   521   00FF82  C1                 	db	193
   522   00FF83  81                 	db	129
   523   00FF84  40                 	db	64
   524   00FF85  01                 	db	1
   525   00FF86  C0                 	db	192
   526   00FF87  80                 	db	128
   527   00FF88  41                 	db	65
   528   00FF89  00                 	db	0
   529   00FF8A  C1                 	db	193
   530   00FF8B  81                 	db	129
   531   00FF8C  40                 	db	64
   532   00FF8D  00                 	db	0
   533   00FF8E  C1                 	db	193
   534   00FF8F  81                 	db	129
   535   00FF90  40                 	db	64
   536   00FF91  01                 	db	1
   537   00FF92  C0                 	db	192
   538   00FF93  80                 	db	128
   539   00FF94  41                 	db	65
   540   00FF95  00                 	db	0
   541   00FF96  C1                 	db	193
   542   00FF97  81                 	db	129
   543   00FF98  40                 	db	64
   544   00FF99  01                 	db	1
   545   00FF9A  C0                 	db	192
   546   00FF9B  80                 	db	128
   547   00FF9C  41                 	db	65
   548   00FF9D  01                 	db	1
   549   00FF9E  C0                 	db	192
   550   00FF9F  80                 	db	128
   551   00FFA0  41                 	db	65
   552   00FFA1  00                 	db	0
   553   00FFA2  C1                 	db	193
   554   00FFA3  81                 	db	129
   555   00FFA4  40                 	db	64
   556   00FFA5  01                 	db	1
   557   00FFA6  C0                 	db	192
   558   00FFA7  80                 	db	128
   559   00FFA8  41                 	db	65
   560   00FFA9  00                 	db	0
   561   00FFAA  C1                 	db	193
   562   00FFAB  81                 	db	129
   563   00FFAC  40                 	db	64
   564   00FFAD  00                 	db	0
   565   00FFAE  C1                 	db	193
   566   00FFAF  81                 	db	129
   567   00FFB0  40                 	db	64
   568   00FFB1  01                 	db	1
   569   00FFB2  C0                 	db	192
   570   00FFB3  80                 	db	128
   571   00FFB4  41                 	db	65
   572   00FFB5  01                 	db	1
   573   00FFB6  C0                 	db	192
   574   00FFB7  80                 	db	128
   575   00FFB8  41                 	db	65
   576   00FFB9  00                 	db	0
   577   00FFBA  C1                 	db	193
   578   00FFBB  81                 	db	129
   579   00FFBC  40                 	db	64
   580   00FFBD  00                 	db	0
   581   00FFBE  C1                 	db	193
   582   00FFBF  81                 	db	129
   583   00FFC0  40                 	db	64
   584   00FFC1  01                 	db	1
   585   00FFC2  C0                 	db	192
   586   00FFC3  80                 	db	128
   587   00FFC4  41                 	db	65
   588   00FFC5  00                 	db	0
   589   00FFC6  C1                 	db	193
   590   00FFC7  81                 	db	129
   591   00FFC8  40                 	db	64
   592   00FFC9  01                 	db	1
   593   00FFCA  C0                 	db	192
   594   00FFCB  80                 	db	128
   595   00FFCC  41                 	db	65
   596   00FFCD  01                 	db	1
   597   00FFCE  C0                 	db	192
   598   00FFCF  80                 	db	128
   599   00FFD0  41                 	db	65
   600   00FFD1  00                 	db	0
   601   00FFD2  C1                 	db	193
   602   00FFD3  81                 	db	129
   603   00FFD4  40                 	db	64
   604   00FFD5                     __end_of_aucCRCHi:
   605                           	callstack 0
   606   00FFD5                     _dpowers:
   607                           	callstack 0
   608   00FFD5  0001               	dw	1
   609   00FFD7  000A               	dw	10
   610   00FFD9  0064               	dw	100
   611   00FFDB  03E8               	dw	1000
   612   00FFDD  2710               	dw	10000
   613   00FFDF                     __end_of_dpowers:
   614                           	callstack 0
   615   000000                     _RCREG	set	4014
   616   000000                     _TXREG	set	4013
   617   000000                     _PORTE	set	3972
   618   000000                     _TRISDbits	set	3989
   619   000000                     _TRISCbits	set	3988
   620   000000                     _SSP2CON2bits	set	3938
   621   000000                     _SSP2CON2	set	3938
   622   000000                     _TRISE7	set	31927
   623   000000                     _TRISE6	set	31926
   624   000000                     _TRISE5	set	31925
   625   000000                     _TRISE4	set	31924
   626   000000                     _TRISE2	set	31922
   627   000000                     _TRISD0	set	31912
   628   000000                     _RE7	set	31783
   629   000000                     _RE6	set	31782
   630   000000                     _RE5	set	31781
   631   000000                     _RE4	set	31780
   632   000000                     _RE3	set	31779
   633   000000                     _TRMT	set	32097
   634   000000                     _CREN	set	32092
   635   000000                     _TRISC6	set	31910
   636   000000                     _RCEN2	set	31507
   637   000000                     _BF2	set	31520
   638   000000                     _PEN2	set	31506
   639   000000                     _RSEN2	set	31505
   640   000000                     _TRISD5	set	31917
   641   000000                     _SSP2CON1	set	3939
   642   000000                     _SSP2STAT	set	3940
   643   000000                     _SEN2	set	31504
   644   000000                     _TRISD6	set	31918
   645   000000                     _TRISE	set	3990
   646   000000                     _RCSTA1bits	set	4011
   647   000000                     _TXSTA1bits	set	4012
   648   000000                     _SPBRG1	set	4015
   649   000000                     _RCIF	set	31989
   650   000000                     _LATDbits	set	3980
   651   000000                     _SSP2BUF	set	3942
   652   000000                     _SSP2ADD	set	3941
   653   000000                     _RD0	set	31768
   654   000000                     _TRISC7	set	31911
   655   000000                     _LATE	set	3981
   656   000000                     _RE2	set	31778
   657   00FFDF                     STR_2:
   658   00FFDF  25                 	db	37
   659   00FFE0  64                 	db	100	;'d'
   660   00FFE1  25                 	db	37
   661   00FFE2  64                 	db	100	;'d'
   662   00FFE3  2F                 	db	47
   663   00FFE4  25                 	db	37
   664   00FFE5  64                 	db	100	;'d'
   665   00FFE6  25                 	db	37
   666   00FFE7  64                 	db	100	;'d'
   667   00FFE8  2F                 	db	47
   668   00FFE9  25                 	db	37
   669   00FFEA  64                 	db	100	;'d'
   670   00FFEB  25                 	db	37
   671   00FFEC  64                 	db	100	;'d'
   672   00FFED  20                 	db	32
   673   00FFEE  00                 	db	0
   674   00FFEF                     STR_1:
   675   00FFEF  25                 	db	37
   676   00FFF0  64                 	db	100	;'d'
   677   00FFF1  25                 	db	37
   678   00FFF2  64                 	db	100	;'d'
   679   00FFF3  3A                 	db	58	;':'
   680   00FFF4  25                 	db	37
   681   00FFF5  64                 	db	100	;'d'
   682   00FFF6  25                 	db	37
   683   00FFF7  64                 	db	100	;'d'
   684   00FFF8  3A                 	db	58	;':'
   685   00FFF9  25                 	db	37
   686   00FFFA  64                 	db	100	;'d'
   687   00FFFB  25                 	db	37
   688   00FFFC  64                 	db	100	;'d'
   689   00FFFD  20                 	db	32
   690   00FFFE  00                 	db	0
   691   00FFFF  00                 	db	0	; dummy byte at the end
   692   000000                     
   693                           ; #config settings
   694                           
   695                           	psect	cinit
   696   010690                     __pcinit:
   697                           	callstack 0
   698   010690                     start_initialization:
   699                           	callstack 0
   700   010690                     __initialization:
   701                           	callstack 0
   702                           
   703                           ; Initialize objects allocated to COMRAM (2 bytes)
   704                           ; load TBLPTR registers with __pidataCOMRAM
   705   010690  0E6A               	movlw	low __pidataCOMRAM
   706   010692  6EF6               	movwf	tblptrl,c
   707   010694  0E08               	movlw	high __pidataCOMRAM
   708   010696  6EF7               	movwf	tblptrh,c
   709   010698  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   710   01069A  6EF8               	movwf	tblptru,c
   711   01069C  0009               	tblrd		*+	;fetch initializer
   712   01069E  CFF5 F03B          	movff	tablat,__pdataCOMRAM
   713   0106A2  0009               	tblrd		*+	;fetch initializer
   714   0106A4  CFF5 F03C          	movff	tablat,__pdataCOMRAM+1
   715                           
   716                           ; Clear objects allocated to BANK0 (140 bytes)
   717   0106A8  EE00  F060         	lfsr	0,__pbssBANK0
   718   0106AC  0E8C               	movlw	140
   719   0106AE                     clear_0:
   720   0106AE  6AEE               	clrf	postinc0,c
   721   0106B0  06E8               	decf	wreg,f,c
   722   0106B2  E1FD               	bnz	clear_0
   723                           
   724                           ; Clear objects allocated to COMRAM (14 bytes)
   725   0106B4  EE00  F02D         	lfsr	0,__pbssCOMRAM
   726   0106B8  0E0E               	movlw	14
   727   0106BA                     clear_1:
   728   0106BA  6AEE               	clrf	postinc0,c
   729   0106BC  06E8               	decf	wreg,f,c
   730   0106BE  E1FD               	bnz	clear_1
   731   0106C0                     end_of_initialization:
   732                           	callstack 0
   733   0106C0                     __end_of__initialization:
   734                           	callstack 0
   735   0106C0  0100               	movlb	0
   736   0106C2  EF00  F080         	goto	_main	;jump to C main() function
   737                           
   738                           	psect	bssCOMRAM
   739   00002D                     __pbssCOMRAM:
   740                           	callstack 0
   741   00002D                     _C:
   742                           	callstack 0
   743   00002D                     	ds	2
   744   00002F                     _str:
   745                           	callstack 0
   746   00002F                     	ds	2
   747   000031                     _rx_overrun_flag:
   748                           	callstack 0
   749   000031                     	ds	2
   750   000033                     _flag:
   751                           	callstack 0
   752   000033                     	ds	1
   753   000034                     _year:
   754                           	callstack 0
   755   000034                     	ds	1
   756   000035                     _month:
   757                           	callstack 0
   758   000035                     	ds	1
   759   000036                     _date:
   760                           	callstack 0
   761   000036                     	ds	1
   762   000037                     _day:
   763                           	callstack 0
   764   000037                     	ds	1
   765   000038                     _hour:
   766                           	callstack 0
   767   000038                     	ds	1
   768   000039                     _min:
   769                           	callstack 0
   770   000039                     	ds	1
   771   00003A                     _sec:
   772                           	callstack 0
   773   00003A                     	ds	1
   774                           
   775                           	psect	dataCOMRAM
   776   00003B                     __pdataCOMRAM:
   777                           	callstack 0
   778   00003B                     _buffer_max_size:
   779                           	callstack 0
   780   00003B                     	ds	2
   781                           
   782                           	psect	bssBANK0
   783   000060                     __pbssBANK0:
   784                           	callstack 0
   785   000060                     _a:
   786                           	callstack 0
   787   000060                     	ds	40
   788   000088                     _buffer:
   789                           	callstack 0
   790   000088                     	ds	100
   791                           
   792                           	psect	cstackCOMRAM
   793   000001                     __pcstackCOMRAM:
   794                           	callstack 0
   795   000001                     ??_i2c_wait:
   796   000001                     ??_ToggleEpinOfLCD:
   797   000001                     ?___lwdiv:
   798                           	callstack 0
   799   000001                     ?___aldiv:
   800                           	callstack 0
   801   000001                     UART_Write@UART_DATA:
   802                           	callstack 0
   803   000001                     BCD2UpperCh@bcd:
   804                           	callstack 0
   805   000001                     BCD2LowerCh@bcd:
   806                           	callstack 0
   807   000001                     ___lwdiv@dividend:
   808                           	callstack 0
   809   000001                     ___aldiv@dividend:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x0
   813   000001                     	ds	1
   814   000002                     i2c_send@dat:
   815                           	callstack 0
   816   000002                     i2c_read@temp:
   817                           	callstack 0
   818   000002                     BCD2UpperCh@temp:
   819                           	callstack 0
   820   000002                     BCD2LowerCh@temp:
   821                           	callstack 0
   822   000002                     WriteCommandToLCD@Command:
   823                           	callstack 0
   824   000002                     WriteDataToLCD@LCDChar:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x1
   828   000002                     	ds	1
   829   000003                     rtc1307_read@address:
   830                           	callstack 0
   831   000003                     WriteStringToLCD@s:
   832                           	callstack 0
   833   000003                     ___lwdiv@divisor:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x2
   837   000003                     	ds	1
   838   000004                     rtc1307_read@temp1:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x3
   842   000004                     	ds	1
   843   000005                     ___lwdiv@quotient:
   844                           	callstack 0
   845   000005                     ___aldiv@divisor:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x4
   849   000005                     	ds	2
   850   000007                     ___lwdiv@counter:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x6
   854   000007                     	ds	1
   855   000008                     ?___lwmod:
   856                           	callstack 0
   857   000008                     ___lwmod@dividend:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x7
   861   000008                     	ds	1
   862   000009                     ___aldiv@counter:
   863                           	callstack 0
   864                           
   865                           ; 1 bytes @ 0x8
   866   000009                     	ds	1
   867   00000A                     ___aldiv@sign:
   868                           	callstack 0
   869   00000A                     ___lwmod@divisor:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x9
   873   00000A                     	ds	1
   874   00000B                     ___aldiv@quotient:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0xA
   878   00000B                     	ds	1
   879   00000C                     ___lwmod@counter:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0xB
   883   00000C                     	ds	1
   884   00000D                     ?_sprintf:
   885                           	callstack 0
   886   00000D                     sprintf@sp:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0xC
   890   00000D                     	ds	2
   891   00000F                     sprintf@f:
   892                           	callstack 0
   893   00000F                     UART_Init@baudrate:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0xE
   897   00000F                     	ds	4
   898   000013                     ??_UART_Init:
   899                           
   900                           ; 1 bytes @ 0x12
   901   000013                     	ds	8
   902   00001B                     UART_Init@x:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x1A
   906   00001B                     	ds	2
   907   00001D                     ??_sprintf:
   908                           
   909                           ; 1 bytes @ 0x1C
   910   00001D                     	ds	1
   911   00001E                     sprintf@ap:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x1D
   915   00001E                     	ds	2
   916   000020                     sprintf@flag:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x1F
   920   000020                     	ds	1
   921   000021                     sprintf@prec:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x20
   925   000021                     	ds	1
   926   000022                     sprintf@val:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x21
   930   000022                     	ds	2
   931   000024                     sprintf@c:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x23
   935   000024                     	ds	1
   936   000025                     ??_main:
   937                           
   938                           ; 1 bytes @ 0x24
   939   000025                     	ds	6
   940   00002B                     main@m:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x2A
   944   00002B                     	ds	1
   945   00002C                     main@i:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x2B
   949   00002C                     	ds	1
   950                           
   951 ;;
   952 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   953 ;;
   954 ;; *************** function _main *****************
   955 ;; Defined at:
   956 ;;		line 186 in file "Test_code_RTC1307_UART.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  CRC_rx          2    0        unsigned int 
   961 ;;  CRC_tx          2    0        unsigned int 
   962 ;;  i               1   43[COMRAM] unsigned char 
   963 ;;  m               1   42[COMRAM] unsigned char 
   964 ;;  d               1    0        unsigned char 
   965 ;;  CRC_Hi          1    0        unsigned char 
   966 ;;  CRC_Lo          1    0        unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;Total ram usage:        8 bytes
   981 ;; Hardware stack levels required when called: 3
   982 ;; This function calls:
   983 ;;		_BCD2LowerCh
   984 ;;		_BCD2UpperCh
   985 ;;		_ClearLCDScreen
   986 ;;		_InitLCD
   987 ;;		_RS485_Init
   988 ;;		_UART_Init
   989 ;;		_UART_Write
   990 ;;		_WriteCommandToLCD
   991 ;;		_WriteStringToLCD
   992 ;;		_rtc1307_read
   993 ;;		_sprintf
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text0
  1000   010000                     __ptext0:
  1001                           	callstack 0
  1002   010000                     _main:
  1003                           	callstack 28
  1004   010000  0E00               	movlw	0
  1005   010002  6E2C               	movwf	main@i^0,c
  1006   010004  0E01               	movlw	1
  1007   010006  6E2B               	movwf	main@m^0,c
  1008                           
  1009                           ;Test_code_RTC1307_UART.c: 191: TRISE = 0x00;
  1010   010008  0E00               	movlw	0
  1011   01000A  6E96               	movwf	150,c	;volatile
  1012   01000C                     
  1013                           ;Test_code_RTC1307_UART.c: 193: TRISDbits.TRISD1 = 0;
  1014   01000C  9295               	bcf	149,1,c	;volatile
  1015   01000E                     
  1016                           ;Test_code_RTC1307_UART.c: 194: LATDbits.LATD1 = 0;
  1017   01000E  928C               	bcf	140,1,c	;volatile
  1018   010010                     
  1019                           ;Test_code_RTC1307_UART.c: 196: InitLCD();
  1020   010010  EC17  F083         	call	_InitLCD	;wreg free
  1021   010014                     
  1022                           ;Test_code_RTC1307_UART.c: 197: _delay((unsigned long)((1200)*(10000000/4000000.0)));
  1023   010014  0E04               	movlw	4
  1024   010016  6E25               	movwf	??_main^0,c
  1025   010018  0EE4               	movlw	228
  1026   01001A                     u677:
  1027   01001A  2EE8               	decfsz	wreg,f,c
  1028   01001C  D7FE               	bra	u677
  1029   01001E  2E25               	decfsz	??_main^0,f,c
  1030   010020  D7FC               	bra	u677
  1031   010022  D000               	nop2	
  1032   010024                     
  1033                           ;Test_code_RTC1307_UART.c: 198: ClearLCDScreen();
  1034   010024  EC31  F084         	call	_ClearLCDScreen	;wreg free
  1035   010028                     
  1036                           ;Test_code_RTC1307_UART.c: 200: UART_Init(9600);
  1037   010028  0E80               	movlw	128
  1038   01002A  6E0F               	movwf	UART_Init@baudrate^0,c
  1039   01002C  0E25               	movlw	37
  1040   01002E  6E10               	movwf	(UART_Init@baudrate+1)^0,c
  1041   010030  0E00               	movlw	0
  1042   010032  6E11               	movwf	(UART_Init@baudrate+2)^0,c
  1043   010034  0E00               	movlw	0
  1044   010036  6E12               	movwf	(UART_Init@baudrate+3)^0,c
  1045   010038  EC64  F082         	call	_UART_Init	;wreg free
  1046   01003C                     
  1047                           ;Test_code_RTC1307_UART.c: 201: RS485_Init();
  1048   01003C  EC2D  F084         	call	_RS485_Init	;wreg free
  1049   010040                     l1628:
  1050                           
  1051                           ;Test_code_RTC1307_UART.c: 205: {;Test_code_RTC1307_UART.c: 206: sec = rtc1307_read(0x00
      +                          );
  1052   010040  0E00               	movlw	0
  1053   010042  EC7B  F083         	call	_rtc1307_read
  1054   010046  6E3A               	movwf	_sec^0,c
  1055   010048                     
  1056                           ;Test_code_RTC1307_UART.c: 207: min = rtc1307_read(0x01);
  1057   010048  0E01               	movlw	1
  1058   01004A  EC7B  F083         	call	_rtc1307_read
  1059   01004E  6E39               	movwf	_min^0,c
  1060   010050                     
  1061                           ;Test_code_RTC1307_UART.c: 208: hour = rtc1307_read(0x02);
  1062   010050  0E02               	movlw	2
  1063   010052  EC7B  F083         	call	_rtc1307_read
  1064   010056  6E38               	movwf	_hour^0,c
  1065   010058                     
  1066                           ;Test_code_RTC1307_UART.c: 209: day = rtc1307_read(0x03);
  1067   010058  0E03               	movlw	3
  1068   01005A  EC7B  F083         	call	_rtc1307_read
  1069   01005E  6E37               	movwf	_day^0,c
  1070   010060                     
  1071                           ;Test_code_RTC1307_UART.c: 210: date = rtc1307_read(0x04);
  1072   010060  0E04               	movlw	4
  1073   010062  EC7B  F083         	call	_rtc1307_read
  1074   010066  6E36               	movwf	_date^0,c
  1075   010068                     
  1076                           ;Test_code_RTC1307_UART.c: 211: month = rtc1307_read(0x05);
  1077   010068  0E05               	movlw	5
  1078   01006A  EC7B  F083         	call	_rtc1307_read
  1079   01006E  6E35               	movwf	_month^0,c
  1080   010070                     
  1081                           ;Test_code_RTC1307_UART.c: 212: year = rtc1307_read(0x06);
  1082   010070  0E06               	movlw	6
  1083   010072  EC7B  F083         	call	_rtc1307_read
  1084   010076  6E34               	movwf	_year^0,c
  1085   010078                     
  1086                           ;Test_code_RTC1307_UART.c: 214: WriteCommandToLCD(0x88);
  1087   010078  0E88               	movlw	136
  1088   01007A  ECB6  F083         	call	_WriteCommandToLCD
  1089   01007E                     
  1090                           ;Test_code_RTC1307_UART.c: 215: sprintf(buffer,"%d%d:%d%d:%d%d ",BCD2UpperCh(hour),BCD2L
      +                          owerCh(hour),BCD2UpperCh(min),BCD2LowerCh(min),BCD2UpperCh(sec),BCD2LowerCh(sec));
  1091   01007E  0E88               	movlw	low _buffer
  1092   010080  6E0D               	movwf	sprintf@sp^0,c
  1093   010082  0E00               	movlw	high _buffer
  1094   010084  6E0E               	movwf	(sprintf@sp+1)^0,c
  1095   010086  0EEF               	movlw	low STR_1
  1096   010088  6E0F               	movwf	sprintf@f^0,c
  1097   01008A  0EFF               	movlw	high STR_1
  1098   01008C  6E10               	movwf	(sprintf@f+1)^0,c
  1099   01008E  5038               	movf	_hour^0,w,c
  1100   010090  EC1B  F084         	call	_BCD2UpperCh
  1101   010094  6E25               	movwf	??_main^0,c
  1102   010096  5025               	movf	??_main^0,w,c
  1103   010098  6E11               	movwf	(?_sprintf+4)^0,c
  1104   01009A  6A12               	clrf	(?_sprintf+5)^0,c
  1105   01009C  5038               	movf	_hour^0,w,c
  1106   01009E  EC24  F084         	call	_BCD2LowerCh
  1107   0100A2  6E26               	movwf	(??_main+1)^0,c
  1108   0100A4  5026               	movf	(??_main+1)^0,w,c
  1109   0100A6  6E13               	movwf	(?_sprintf+6)^0,c
  1110   0100A8  6A14               	clrf	(?_sprintf+7)^0,c
  1111   0100AA  5039               	movf	_min^0,w,c
  1112   0100AC  EC1B  F084         	call	_BCD2UpperCh
  1113   0100B0  6E27               	movwf	(??_main+2)^0,c
  1114   0100B2  5027               	movf	(??_main+2)^0,w,c
  1115   0100B4  6E15               	movwf	(?_sprintf+8)^0,c
  1116   0100B6  6A16               	clrf	(?_sprintf+9)^0,c
  1117   0100B8  5039               	movf	_min^0,w,c
  1118   0100BA  EC24  F084         	call	_BCD2LowerCh
  1119   0100BE  6E28               	movwf	(??_main+3)^0,c
  1120   0100C0  5028               	movf	(??_main+3)^0,w,c
  1121   0100C2  6E17               	movwf	(?_sprintf+10)^0,c
  1122   0100C4  6A18               	clrf	(?_sprintf+11)^0,c
  1123   0100C6  503A               	movf	_sec^0,w,c
  1124   0100C8  EC1B  F084         	call	_BCD2UpperCh
  1125   0100CC  6E29               	movwf	(??_main+4)^0,c
  1126   0100CE  5029               	movf	(??_main+4)^0,w,c
  1127   0100D0  6E19               	movwf	(?_sprintf+12)^0,c
  1128   0100D2  6A1A               	clrf	(?_sprintf+13)^0,c
  1129   0100D4  503A               	movf	_sec^0,w,c
  1130   0100D6  EC24  F084         	call	_BCD2LowerCh
  1131   0100DA  6E2A               	movwf	(??_main+5)^0,c
  1132   0100DC  502A               	movf	(??_main+5)^0,w,c
  1133   0100DE  6E1B               	movwf	(?_sprintf+14)^0,c
  1134   0100E0  6A1C               	clrf	(?_sprintf+15)^0,c
  1135   0100E2  EC04  F081         	call	_sprintf	;wreg free
  1136   0100E6                     
  1137                           ;Test_code_RTC1307_UART.c: 216: WriteStringToLCD(buffer);
  1138   0100E6  0E88               	movlw	low _buffer
  1139   0100E8  6E03               	movwf	WriteStringToLCD@s^0,c
  1140   0100EA  0E00               	movlw	high _buffer
  1141   0100EC  6E04               	movwf	(WriteStringToLCD@s+1)^0,c
  1142   0100EE  EC63  F083         	call	_WriteStringToLCD	;wreg free
  1143                           
  1144                           ;Test_code_RTC1307_UART.c: 217: while (buffer[i]!='\0'&&i<=buffer_max_size)
  1145   0100F2  EF8B  F080         	goto	l1652
  1146   0100F6                     l1648:
  1147                           
  1148                           ;Test_code_RTC1307_UART.c: 218: {;Test_code_RTC1307_UART.c: 219: UART_Write(buffer[i]);
  1149   0100F6  0E88               	movlw	low _buffer
  1150   0100F8  242C               	addwf	main@i^0,w,c
  1151   0100FA  6ED9               	movwf	fsr2l,c
  1152   0100FC  6ADA               	clrf	fsr2h,c
  1153   0100FE  0E00               	movlw	high _buffer
  1154   010100  22DA               	addwfc	fsr2h,f,c
  1155   010102  50DF               	movf	indf2,w,c
  1156   010104  ECF5  F083         	call	_UART_Write
  1157   010108                     
  1158                           ;Test_code_RTC1307_UART.c: 220: _delay((unsigned long)((4)*(10000000/4000.0)));
  1159   010108  0E0D               	movlw	13
  1160   01010A  6E25               	movwf	??_main^0,c
  1161   01010C  0EFC               	movlw	252
  1162   01010E                     u687:
  1163   01010E  2EE8               	decfsz	wreg,f,c
  1164   010110  D7FE               	bra	u687
  1165   010112  2E25               	decfsz	??_main^0,f,c
  1166   010114  D7FC               	bra	u687
  1167   010116                     l1652:
  1168   010116  0E88               	movlw	low _buffer
  1169   010118  242C               	addwf	main@i^0,w,c
  1170   01011A  6ED9               	movwf	fsr2l,c
  1171   01011C  6ADA               	clrf	fsr2h,c
  1172   01011E  0E00               	movlw	high _buffer
  1173   010120  22DA               	addwfc	fsr2h,f,c
  1174   010122  50DF               	movf	indf2,w,c
  1175   010124  B4D8               	btfsc	status,2,c
  1176   010126  EF97  F080         	goto	u631
  1177   01012A  EF99  F080         	goto	u630
  1178   01012E                     u631:
  1179   01012E  EFA1  F080         	goto	l1656
  1180   010132                     u630:
  1181   010132  0E20               	movlw	32
  1182   010134  642C               	cpfsgt	main@i^0,c
  1183   010136  EF9F  F080         	goto	u641
  1184   01013A  EFA1  F080         	goto	u640
  1185   01013E                     u641:
  1186   01013E  EF7B  F080         	goto	l1648
  1187   010142                     u640:
  1188   010142                     l1656:
  1189                           
  1190                           ;Test_code_RTC1307_UART.c: 221: };Test_code_RTC1307_UART.c: 222: WriteCommandToLCD(0xC8)
      +                          ;
  1191   010142  0EC8               	movlw	200
  1192   010144  ECB6  F083         	call	_WriteCommandToLCD
  1193   010148                     
  1194                           ;Test_code_RTC1307_UART.c: 223: sprintf(buffer,"%d%d/%d%d/%d%d ",BCD2UpperCh(date),BCD2L
      +                          owerCh(date),BCD2UpperCh(month),BCD2LowerCh(month),BCD2UpperCh(year),BCD2LowerCh(year));
  1195   010148  0E88               	movlw	low _buffer
  1196   01014A  6E0D               	movwf	sprintf@sp^0,c
  1197   01014C  0E00               	movlw	high _buffer
  1198   01014E  6E0E               	movwf	(sprintf@sp+1)^0,c
  1199   010150  0EDF               	movlw	low STR_2
  1200   010152  6E0F               	movwf	sprintf@f^0,c
  1201   010154  0EFF               	movlw	high STR_2
  1202   010156  6E10               	movwf	(sprintf@f+1)^0,c
  1203   010158  5036               	movf	_date^0,w,c
  1204   01015A  EC1B  F084         	call	_BCD2UpperCh
  1205   01015E  6E25               	movwf	??_main^0,c
  1206   010160  5025               	movf	??_main^0,w,c
  1207   010162  6E11               	movwf	(?_sprintf+4)^0,c
  1208   010164  6A12               	clrf	(?_sprintf+5)^0,c
  1209   010166  5036               	movf	_date^0,w,c
  1210   010168  EC24  F084         	call	_BCD2LowerCh
  1211   01016C  6E26               	movwf	(??_main+1)^0,c
  1212   01016E  5026               	movf	(??_main+1)^0,w,c
  1213   010170  6E13               	movwf	(?_sprintf+6)^0,c
  1214   010172  6A14               	clrf	(?_sprintf+7)^0,c
  1215   010174  5035               	movf	_month^0,w,c
  1216   010176  EC1B  F084         	call	_BCD2UpperCh
  1217   01017A  6E27               	movwf	(??_main+2)^0,c
  1218   01017C  5027               	movf	(??_main+2)^0,w,c
  1219   01017E  6E15               	movwf	(?_sprintf+8)^0,c
  1220   010180  6A16               	clrf	(?_sprintf+9)^0,c
  1221   010182  5035               	movf	_month^0,w,c
  1222   010184  EC24  F084         	call	_BCD2LowerCh
  1223   010188  6E28               	movwf	(??_main+3)^0,c
  1224   01018A  5028               	movf	(??_main+3)^0,w,c
  1225   01018C  6E17               	movwf	(?_sprintf+10)^0,c
  1226   01018E  6A18               	clrf	(?_sprintf+11)^0,c
  1227   010190  5034               	movf	_year^0,w,c
  1228   010192  EC1B  F084         	call	_BCD2UpperCh
  1229   010196  6E29               	movwf	(??_main+4)^0,c
  1230   010198  5029               	movf	(??_main+4)^0,w,c
  1231   01019A  6E19               	movwf	(?_sprintf+12)^0,c
  1232   01019C  6A1A               	clrf	(?_sprintf+13)^0,c
  1233   01019E  5034               	movf	_year^0,w,c
  1234   0101A0  EC24  F084         	call	_BCD2LowerCh
  1235   0101A4  6E2A               	movwf	(??_main+5)^0,c
  1236   0101A6  502A               	movf	(??_main+5)^0,w,c
  1237   0101A8  6E1B               	movwf	(?_sprintf+14)^0,c
  1238   0101AA  6A1C               	clrf	(?_sprintf+15)^0,c
  1239   0101AC  EC04  F081         	call	_sprintf	;wreg free
  1240                           
  1241                           ;Test_code_RTC1307_UART.c: 224: while (buffer[i]!='\0'&&i<=buffer_max_size)
  1242   0101B0  EFEA  F080         	goto	l1664
  1243   0101B4                     l1660:
  1244                           
  1245                           ;Test_code_RTC1307_UART.c: 225: {;Test_code_RTC1307_UART.c: 226: UART_Write(buffer[i]);
  1246   0101B4  0E88               	movlw	low _buffer
  1247   0101B6  242C               	addwf	main@i^0,w,c
  1248   0101B8  6ED9               	movwf	fsr2l,c
  1249   0101BA  6ADA               	clrf	fsr2h,c
  1250   0101BC  0E00               	movlw	high _buffer
  1251   0101BE  22DA               	addwfc	fsr2h,f,c
  1252   0101C0  50DF               	movf	indf2,w,c
  1253   0101C2  ECF5  F083         	call	_UART_Write
  1254   0101C6                     
  1255                           ;Test_code_RTC1307_UART.c: 227: _delay((unsigned long)((4)*(10000000/4000.0)));
  1256   0101C6  0E0D               	movlw	13
  1257   0101C8  6E25               	movwf	??_main^0,c
  1258   0101CA  0EFC               	movlw	252
  1259   0101CC                     u697:
  1260   0101CC  2EE8               	decfsz	wreg,f,c
  1261   0101CE  D7FE               	bra	u697
  1262   0101D0  2E25               	decfsz	??_main^0,f,c
  1263   0101D2  D7FC               	bra	u697
  1264   0101D4                     l1664:
  1265   0101D4  0E88               	movlw	low _buffer
  1266   0101D6  242C               	addwf	main@i^0,w,c
  1267   0101D8  6ED9               	movwf	fsr2l,c
  1268   0101DA  6ADA               	clrf	fsr2h,c
  1269   0101DC  0E00               	movlw	high _buffer
  1270   0101DE  22DA               	addwfc	fsr2h,f,c
  1271   0101E0  50DF               	movf	indf2,w,c
  1272   0101E2  B4D8               	btfsc	status,2,c
  1273   0101E4  EFF6  F080         	goto	u651
  1274   0101E8  EFF8  F080         	goto	u650
  1275   0101EC                     u651:
  1276   0101EC  EF20  F080         	goto	l1628
  1277   0101F0                     u650:
  1278   0101F0  0E20               	movlw	32
  1279   0101F2  642C               	cpfsgt	main@i^0,c
  1280   0101F4  EFFE  F080         	goto	u661
  1281   0101F8  EF00  F081         	goto	u660
  1282   0101FC                     u661:
  1283   0101FC  EFDA  F080         	goto	l1660
  1284   010200                     u660:
  1285   010200  EF20  F080         	goto	l1628
  1286   010204  EF00  F000         	goto	start
  1287   010208                     __end_of_main:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _sprintf *****************
  1291 ;; Defined at:
  1292 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1295 ;;		 -> buffer(100), 
  1296 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1297 ;;		 -> STR_2(16), STR_1(16), 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  tmpval          4    0        struct .
  1300 ;;  cp              3    0        PTR const unsigned char 
  1301 ;;  val             2   33[COMRAM] unsigned int 
  1302 ;;  ap              2   29[COMRAM] PTR void [1]
  1303 ;;		 -> ?_sprintf(2), 
  1304 ;;  len             2    0        unsigned int 
  1305 ;;  c               1   35[COMRAM] unsigned char 
  1306 ;;  prec            1   32[COMRAM] char 
  1307 ;;  flag            1   31[COMRAM] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2   12[COMRAM] int 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1317 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;Total ram usage:       24 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 1
  1324 ;; This function calls:
  1325 ;;		___lwdiv
  1326 ;;		___lwmod
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text1
  1333   010208                     __ptext1:
  1334                           	callstack 0
  1335   010208                     _sprintf:
  1336                           	callstack 29
  1337   010208                     
  1338                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1339   010208  0E11               	movlw	low (?_sprintf+4)
  1340   01020A  6E1E               	movwf	sprintf@ap^0,c
  1341   01020C  0E00               	movlw	high (?_sprintf+4)
  1342   01020E  6E1F               	movwf	(sprintf@ap+1)^0,c
  1343                           
  1344                           ;doprnt.c: 553: while((c = *f++)) {
  1345   010210  EFC4  F081         	goto	l1598
  1346   010214                     l1546:
  1347                           
  1348                           ;doprnt.c: 555: if(c != '%')
  1349   010214  0E25               	movlw	37
  1350   010216  1824               	xorwf	sprintf@c^0,w,c
  1351   010218  B4D8               	btfsc	status,2,c
  1352   01021A  EF11  F081         	goto	u551
  1353   01021E  EF13  F081         	goto	u550
  1354   010222                     u551:
  1355   010222  EF1D  F081         	goto	l1552
  1356   010226                     u550:
  1357   010226                     
  1358                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1359   010226  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1360   01022A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1361   01022E  C024  FFDF         	movff	sprintf@c,indf2
  1362   010232  4A0D               	infsnz	sprintf@sp^0,f,c
  1363   010234  2A0E               	incf	(sprintf@sp+1)^0,f,c
  1364                           
  1365                           ;doprnt.c: 559: continue;
  1366   010236  EFC4  F081         	goto	l1598
  1367   01023A                     l1552:
  1368                           
  1369                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1370   01023A  0E00               	movlw	0
  1371   01023C  6E20               	movwf	sprintf@flag^0,c
  1372   01023E  C00F  FFF6         	movff	sprintf@f,tblptrl
  1373   010242  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1374   010246  4A0F               	infsnz	sprintf@f^0,f,c
  1375   010248  2A10               	incf	(sprintf@f+1)^0,f,c
  1376   01024A                     	if	0	;tblptru may be non-zero
  1377   01024A                     	endif
  1378   01024A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1379   01024A  0E00               	movlw	low (__mediumconst shr (0+16))
  1380   01024C  6EF8               	movwf	tblptru,c
  1381   01024E                     	endif
  1382   01024E  0008               	tblrd		*
  1383   010250  CFF5 F024          	movff	tablat,sprintf@c
  1384   010254  5024               	movf	sprintf@c^0,w,c
  1385                           
  1386                           ; Switch size 1, requested type "simple"
  1387                           ; Number of cases is 3, Range of values is 0 to 105
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte           10     6 (average)
  1391                           ;	Chosen strategy is simple_byte
  1392   010256  0A00               	xorlw	0	; case 0
  1393   010258  B4D8               	btfsc	status,2,c
  1394   01025A  EFD7  F081         	goto	l1600
  1395   01025E  0A64               	xorlw	100	; case 100
  1396   010260  B4D8               	btfsc	status,2,c
  1397   010262  EF39  F081         	goto	l1558
  1398   010266  0A0D               	xorlw	13	; case 105
  1399   010268  B4D8               	btfsc	status,2,c
  1400   01026A  EF39  F081         	goto	l1558
  1401   01026E  EFC4  F081         	goto	l1598
  1402   010272                     l1558:
  1403                           
  1404                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  1405   010272  C01E  FFD9         	movff	sprintf@ap,fsr2l
  1406   010276  C01F  FFDA         	movff	sprintf@ap+1,fsr2h
  1407   01027A  CFDE F022          	movff	postinc2,sprintf@val
  1408   01027E  CFDD F023          	movff	postdec2,sprintf@val+1
  1409   010282  0E02               	movlw	2
  1410   010284  261E               	addwf	sprintf@ap^0,f,c
  1411   010286  0E00               	movlw	0
  1412   010288  221F               	addwfc	(sprintf@ap+1)^0,f,c
  1413   01028A                     
  1414                           ;doprnt.c: 1287: if((int)val < 0) {
  1415   01028A  BE23               	btfsc	(sprintf@val+1)^0,7,c
  1416   01028C  EF4C  F081         	goto	u560
  1417   010290  EF4A  F081         	goto	u561
  1418   010294                     u561:
  1419   010294  EF52  F081         	goto	l1568
  1420   010298                     u560:
  1421   010298                     
  1422                           ;doprnt.c: 1288: flag |= 0x03;
  1423   010298  0E03               	movlw	3
  1424   01029A  1220               	iorwf	sprintf@flag^0,f,c
  1425   01029C                     
  1426                           ;doprnt.c: 1289: val = -val;
  1427   01029C  6C22               	negf	sprintf@val^0,c
  1428   01029E  1E23               	comf	(sprintf@val+1)^0,f,c
  1429   0102A0  B0D8               	btfsc	status,0,c
  1430   0102A2  2A23               	incf	(sprintf@val+1)^0,f,c
  1431   0102A4                     l1568:
  1432                           
  1433                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  1434   0102A4  0E01               	movlw	1
  1435   0102A6  6E24               	movwf	sprintf@c^0,c
  1436   0102A8                     l1574:
  1437                           
  1438                           ;doprnt.c: 1332: if(val < dpowers[c])
  1439   0102A8  5024               	movf	sprintf@c^0,w,c
  1440   0102AA  0D02               	mullw	2
  1441   0102AC  0ED5               	movlw	low _dpowers
  1442   0102AE  24F3               	addwf	243,w,c
  1443   0102B0  6EF6               	movwf	tblptrl,c
  1444   0102B2  0EFF               	movlw	high _dpowers
  1445   0102B4  20F4               	addwfc	244,w,c
  1446   0102B6  6EF7               	movwf	tblptrh,c
  1447   0102B8                     	if	1	;There are 3 active tblptr bytes
  1448   0102B8  6AF8               	clrf	tblptru,c
  1449   0102BA  0E00               	movlw	low (__mediumconst shr (0+16))
  1450   0102BC  22F8               	addwfc	tblptru,f,c
  1451   0102BE                     	endif
  1452   0102BE  0009               	tblrd		*+
  1453   0102C0  50F5               	movf	tablat,w,c
  1454   0102C2  5C22               	subwf	sprintf@val^0,w,c
  1455   0102C4  0009               	tblrd		*+
  1456   0102C6  50F5               	movf	tablat,w,c
  1457   0102C8  5823               	subwfb	(sprintf@val+1)^0,w,c
  1458   0102CA  B0D8               	btfsc	status,0,c
  1459   0102CC  EF6A  F081         	goto	u571
  1460   0102D0  EF6C  F081         	goto	u570
  1461   0102D4                     u571:
  1462   0102D4  EF6E  F081         	goto	l1578
  1463   0102D8                     u570:
  1464   0102D8  EF78  F081         	goto	l1582
  1465   0102DC                     l1578:
  1466   0102DC  2A24               	incf	sprintf@c^0,f,c
  1467   0102DE  0E05               	movlw	5
  1468   0102E0  1824               	xorwf	sprintf@c^0,w,c
  1469   0102E2  A4D8               	btfss	status,2,c
  1470   0102E4  EF76  F081         	goto	u581
  1471   0102E8  EF78  F081         	goto	u580
  1472   0102EC                     u581:
  1473   0102EC  EF54  F081         	goto	l1574
  1474   0102F0                     u580:
  1475   0102F0                     l1582:
  1476                           
  1477                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  1478   0102F0  C020  F01D         	movff	sprintf@flag,??_sprintf
  1479   0102F4  0E03               	movlw	3
  1480   0102F6  161D               	andwf	??_sprintf^0,f,c
  1481   0102F8  B4D8               	btfsc	status,2,c
  1482   0102FA  EF81  F081         	goto	u591
  1483   0102FE  EF83  F081         	goto	u590
  1484   010302                     u591:
  1485   010302  EF8B  F081         	goto	l1588
  1486   010306                     u590:
  1487   010306                     
  1488                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  1489   010306  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1490   01030A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1491   01030E  0E2D               	movlw	45
  1492   010310  6EDF               	movwf	indf2,c
  1493   010312  4A0D               	infsnz	sprintf@sp^0,f,c
  1494   010314  2A0E               	incf	(sprintf@sp+1)^0,f,c
  1495   010316                     l1588:
  1496                           
  1497                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1498   010316  C024  F021         	movff	sprintf@c,sprintf@prec
  1499                           
  1500                           ;doprnt.c: 1500: while(prec--) {
  1501   01031A  EFBB  F081         	goto	l1596
  1502   01031E                     l1590:
  1503                           
  1504                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1505   01031E  5021               	movf	sprintf@prec^0,w,c
  1506   010320  0D02               	mullw	2
  1507   010322  0ED5               	movlw	low _dpowers
  1508   010324  24F3               	addwf	243,w,c
  1509   010326  6EF6               	movwf	tblptrl,c
  1510   010328  0EFF               	movlw	high _dpowers
  1511   01032A  20F4               	addwfc	244,w,c
  1512   01032C  6EF7               	movwf	tblptrh,c
  1513   01032E                     	if	1	;There are 3 active tblptr bytes
  1514   01032E  6AF8               	clrf	tblptru,c
  1515   010330  0E00               	movlw	low (__mediumconst shr (0+16))
  1516   010332  22F8               	addwfc	tblptru,f,c
  1517   010334                     	endif
  1518   010334  0009               	tblrd		*+
  1519   010336  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1520   01033A  000A               	tblrd		*-
  1521   01033C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1522   010340  C022  F001         	movff	sprintf@val,___lwdiv@dividend
  1523   010344  C023  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1524   010348  ECAB  F082         	call	___lwdiv	;wreg free
  1525   01034C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1526   010350  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1527   010354  0E00               	movlw	0
  1528   010356  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1529   010358  0E0A               	movlw	10
  1530   01035A  6E0A               	movwf	___lwmod@divisor^0,c
  1531   01035C  ECE5  F082         	call	___lwmod	;wreg free
  1532   010360  5008               	movf	?___lwmod^0,w,c
  1533   010362  0F30               	addlw	48
  1534   010364  6E24               	movwf	sprintf@c^0,c
  1535   010366                     
  1536                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1537   010366  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1538   01036A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1539   01036E  C024  FFDF         	movff	sprintf@c,indf2
  1540   010372  4A0D               	infsnz	sprintf@sp^0,f,c
  1541   010374  2A0E               	incf	(sprintf@sp+1)^0,f,c
  1542   010376                     l1596:
  1543   010376  0621               	decf	sprintf@prec^0,f,c
  1544   010378  2821               	incf	sprintf@prec^0,w,c
  1545   01037A  A4D8               	btfss	status,2,c
  1546   01037C  EFC2  F081         	goto	u601
  1547   010380  EFC4  F081         	goto	u600
  1548   010384                     u601:
  1549   010384  EF8F  F081         	goto	l1590
  1550   010388                     u600:
  1551   010388                     l1598:
  1552   010388  C00F  FFF6         	movff	sprintf@f,tblptrl
  1553   01038C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1554   010390  4A0F               	infsnz	sprintf@f^0,f,c
  1555   010392  2A10               	incf	(sprintf@f+1)^0,f,c
  1556   010394                     	if	0	;tblptru may be non-zero
  1557   010394                     	endif
  1558   010394                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1559   010394  0E00               	movlw	low (__mediumconst shr (0+16))
  1560   010396  6EF8               	movwf	tblptru,c
  1561   010398                     	endif
  1562   010398  0008               	tblrd		*
  1563   01039A  CFF5 F024          	movff	tablat,sprintf@c
  1564   01039E  5024               	movf	sprintf@c^0,w,c
  1565   0103A0  A4D8               	btfss	status,2,c
  1566   0103A2  EFD5  F081         	goto	u611
  1567   0103A6  EFD7  F081         	goto	u610
  1568   0103AA                     u611:
  1569   0103AA  EF0A  F081         	goto	l1546
  1570   0103AE                     u610:
  1571   0103AE                     l1600:
  1572                           
  1573                           ;doprnt.c: 1564: *sp = 0;
  1574   0103AE  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1575   0103B2  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1576   0103B6  0E00               	movlw	0
  1577   0103B8  6EDF               	movwf	indf2,c
  1578   0103BA  0012               	return		;funcret
  1579   0103BC                     __end_of_sprintf:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function ___lwmod *****************
  1583 ;; Defined at:
  1584 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  dividend        2    7[COMRAM] unsigned int 
  1587 ;;  divisor         2    9[COMRAM] unsigned int 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  counter         1   11[COMRAM] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2    7[COMRAM] unsigned int 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;Total ram usage:        5 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_sprintf
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text2
  1613   0105CA                     __ptext2:
  1614                           	callstack 0
  1615   0105CA                     ___lwmod:
  1616                           	callstack 29
  1617   0105CA  500A               	movf	___lwmod@divisor^0,w,c
  1618   0105CC  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1619   0105CE  B4D8               	btfsc	status,2,c
  1620   0105D0  EFEC  F082         	goto	u501
  1621   0105D4  EFEE  F082         	goto	u500
  1622   0105D8                     u501:
  1623   0105D8  EF12  F083         	goto	l800
  1624   0105DC                     u500:
  1625   0105DC  0E01               	movlw	1
  1626   0105DE  6E0C               	movwf	___lwmod@counter^0,c
  1627   0105E0  EFF6  F082         	goto	l1514
  1628   0105E4                     l1512:
  1629   0105E4  90D8               	bcf	status,0,c
  1630   0105E6  360A               	rlcf	___lwmod@divisor^0,f,c
  1631   0105E8  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1632   0105EA  2A0C               	incf	___lwmod@counter^0,f,c
  1633   0105EC                     l1514:
  1634   0105EC  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1635   0105EE  EFFB  F082         	goto	u511
  1636   0105F2  EFFD  F082         	goto	u510
  1637   0105F6                     u511:
  1638   0105F6  EFF2  F082         	goto	l1512
  1639   0105FA                     u510:
  1640   0105FA                     l1516:
  1641   0105FA  500A               	movf	___lwmod@divisor^0,w,c
  1642   0105FC  5C08               	subwf	___lwmod@dividend^0,w,c
  1643   0105FE  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1644   010600  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1645   010602  A0D8               	btfss	status,0,c
  1646   010604  EF06  F083         	goto	u521
  1647   010608  EF08  F083         	goto	u520
  1648   01060C                     u521:
  1649   01060C  EF0C  F083         	goto	l1520
  1650   010610                     u520:
  1651   010610  500A               	movf	___lwmod@divisor^0,w,c
  1652   010612  5E08               	subwf	___lwmod@dividend^0,f,c
  1653   010614  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1654   010616  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1655   010618                     l1520:
  1656   010618  90D8               	bcf	status,0,c
  1657   01061A  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1658   01061C  320A               	rrcf	___lwmod@divisor^0,f,c
  1659   01061E  2E0C               	decfsz	___lwmod@counter^0,f,c
  1660   010620  EFFD  F082         	goto	l1516
  1661   010624                     l800:
  1662   010624  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1663   010628  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1664   01062C  0012               	return		;funcret
  1665   01062E                     __end_of___lwmod:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function ___lwdiv *****************
  1669 ;; Defined at:
  1670 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  dividend        2    0[COMRAM] unsigned int 
  1673 ;;  divisor         2    2[COMRAM] unsigned int 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  quotient        2    4[COMRAM] unsigned int 
  1676 ;;  counter         1    6[COMRAM] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  2    0[COMRAM] unsigned int 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;Total ram usage:        7 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_sprintf
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text3
  1700   010556                     __ptext3:
  1701                           	callstack 0
  1702   010556                     ___lwdiv:
  1703                           	callstack 29
  1704   010556  0E00               	movlw	0
  1705   010558  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1706   01055A  0E00               	movlw	0
  1707   01055C  6E05               	movwf	___lwdiv@quotient^0,c
  1708   01055E  5003               	movf	___lwdiv@divisor^0,w,c
  1709   010560  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1710   010562  B4D8               	btfsc	status,2,c
  1711   010564  EFB6  F082         	goto	u471
  1712   010568  EFB8  F082         	goto	u470
  1713   01056C                     u471:
  1714   01056C  EFE0  F082         	goto	l790
  1715   010570                     u470:
  1716   010570  0E01               	movlw	1
  1717   010572  6E07               	movwf	___lwdiv@counter^0,c
  1718   010574  EFC0  F082         	goto	l1494
  1719   010578                     l1492:
  1720   010578  90D8               	bcf	status,0,c
  1721   01057A  3603               	rlcf	___lwdiv@divisor^0,f,c
  1722   01057C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1723   01057E  2A07               	incf	___lwdiv@counter^0,f,c
  1724   010580                     l1494:
  1725   010580  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1726   010582  EFC5  F082         	goto	u481
  1727   010586  EFC7  F082         	goto	u480
  1728   01058A                     u481:
  1729   01058A  EFBC  F082         	goto	l1492
  1730   01058E                     u480:
  1731   01058E                     l1496:
  1732   01058E  90D8               	bcf	status,0,c
  1733   010590  3605               	rlcf	___lwdiv@quotient^0,f,c
  1734   010592  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1735   010594  5003               	movf	___lwdiv@divisor^0,w,c
  1736   010596  5C01               	subwf	___lwdiv@dividend^0,w,c
  1737   010598  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1738   01059A  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1739   01059C  A0D8               	btfss	status,0,c
  1740   01059E  EFD3  F082         	goto	u491
  1741   0105A2  EFD5  F082         	goto	u490
  1742   0105A6                     u491:
  1743   0105A6  EFDA  F082         	goto	l1504
  1744   0105AA                     u490:
  1745   0105AA  5003               	movf	___lwdiv@divisor^0,w,c
  1746   0105AC  5E01               	subwf	___lwdiv@dividend^0,f,c
  1747   0105AE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1748   0105B0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1749   0105B2  8005               	bsf	___lwdiv@quotient^0,0,c
  1750   0105B4                     l1504:
  1751   0105B4  90D8               	bcf	status,0,c
  1752   0105B6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1753   0105B8  3203               	rrcf	___lwdiv@divisor^0,f,c
  1754   0105BA  2E07               	decfsz	___lwdiv@counter^0,f,c
  1755   0105BC  EFC7  F082         	goto	l1496
  1756   0105C0                     l790:
  1757   0105C0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1758   0105C4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1759   0105C8  0012               	return		;funcret
  1760   0105CA                     __end_of___lwdiv:
  1761                           	callstack 0
  1762                           
  1763 ;; *************** function _rtc1307_read *****************
  1764 ;; Defined at:
  1765 ;;		line 174 in file "Test_code_RTC1307_UART.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  address         1    wreg     unsigned char 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  address         1    2[COMRAM] unsigned char 
  1770 ;;  temp1           1    3[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      unsigned char 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;Total ram usage:        2 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 2
  1787 ;; This function calls:
  1788 ;;		_i2c_read
  1789 ;;		_i2c_restart
  1790 ;;		_i2c_send
  1791 ;;		_i2c_start
  1792 ;;		_i2c_stop
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text4
  1799   0106F6                     __ptext4:
  1800                           	callstack 0
  1801   0106F6                     _rtc1307_read:
  1802                           	callstack 28
  1803                           
  1804                           ;incstack = 0
  1805                           ;rtc1307_read@address stored from wreg
  1806   0106F6  6E03               	movwf	rtc1307_read@address^0,c
  1807   0106F8                     
  1808                           ;Test_code_RTC1307_UART.c: 176: unsigned char temp1;;Test_code_RTC1307_UART.c: 177: i2c_
      +                          start();
  1809   0106F8  EC09  F084         	call	_i2c_start	;wreg free
  1810   0106FC                     
  1811                           ;Test_code_RTC1307_UART.c: 178: i2c_send(0xD0);
  1812   0106FC  0ED0               	movlw	208
  1813   0106FE  ECE8  F083         	call	_i2c_send
  1814   010702                     
  1815                           ;Test_code_RTC1307_UART.c: 179: i2c_send(address);
  1816   010702  5003               	movf	rtc1307_read@address^0,w,c
  1817   010704  ECE8  F083         	call	_i2c_send
  1818                           
  1819                           ;Test_code_RTC1307_UART.c: 180: i2c_restart();
  1820   010708  EC12  F084         	call	_i2c_restart	;wreg free
  1821   01070C                     
  1822                           ;Test_code_RTC1307_UART.c: 181: i2c_send(0xD1);
  1823   01070C  0ED1               	movlw	209
  1824   01070E  ECE8  F083         	call	_i2c_send
  1825   010712                     
  1826                           ;Test_code_RTC1307_UART.c: 182: temp1 = i2c_read();
  1827   010712  ECDA  F083         	call	_i2c_read	;wreg free
  1828   010716  6E04               	movwf	rtc1307_read@temp1^0,c
  1829                           
  1830                           ;Test_code_RTC1307_UART.c: 183: i2c_stop();
  1831   010718  EC00  F084         	call	_i2c_stop	;wreg free
  1832   01071C                     
  1833                           ;Test_code_RTC1307_UART.c: 184: return temp1;
  1834   01071C  5004               	movf	rtc1307_read@temp1^0,w,c
  1835   01071E  0012               	return		;funcret
  1836   010720                     __end_of_rtc1307_read:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _i2c_stop *****************
  1840 ;; Defined at:
  1841 ;;		line 60 in file "I2C_lib.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		None
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_rtc1307_read
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text5
  1869   010800                     __ptext5:
  1870                           	callstack 0
  1871   010800                     _i2c_stop:
  1872                           	callstack 29
  1873   010800                     
  1874                           ;I2C_lib.c: 62: PEN2=1;
  1875   010800  8462               	bsf	3938,2,c	;volatile
  1876   010802                     l44:
  1877   010802  B462               	btfsc	3938,2,c	;volatile
  1878   010804  EF06  F084         	goto	u51
  1879   010808  EF08  F084         	goto	u50
  1880   01080C                     u51:
  1881   01080C  EF01  F084         	goto	l44
  1882   010810                     u50:
  1883   010810  0012               	return		;funcret
  1884   010812                     __end_of_i2c_stop:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _i2c_start *****************
  1888 ;; Defined at:
  1889 ;;		line 41 in file "I2C_lib.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		None
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_rtc1307_read
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text6
  1917   010812                     __ptext6:
  1918                           	callstack 0
  1919   010812                     _i2c_start:
  1920                           	callstack 29
  1921   010812                     
  1922                           ;I2C_lib.c: 43: SEN2 = 1;
  1923   010812  8062               	bsf	3938,0,c	;volatile
  1924   010814                     l32:
  1925   010814  B062               	btfsc	3938,0,c	;volatile
  1926   010816  EF0F  F084         	goto	u31
  1927   01081A  EF11  F084         	goto	u30
  1928   01081E                     u31:
  1929   01081E  EF0A  F084         	goto	l32
  1930   010822                     u30:
  1931   010822  0012               	return		;funcret
  1932   010824                     __end_of_i2c_start:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function _i2c_send *****************
  1936 ;; Defined at:
  1937 ;;		line 72 in file "I2C_lib.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  dat             1    wreg     unsigned char 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  dat             1    1[COMRAM] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        1 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 1
  1958 ;; This function calls:
  1959 ;;		_i2c_wait
  1960 ;; This function is called by:
  1961 ;;		_rtc1307_read
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text7
  1966   0107D0                     __ptext7:
  1967                           	callstack 0
  1968   0107D0                     _i2c_send:
  1969                           	callstack 28
  1970                           
  1971                           ;incstack = 0
  1972                           ;i2c_send@dat stored from wreg
  1973   0107D0  6E02               	movwf	i2c_send@dat^0,c
  1974   0107D2                     
  1975                           ;I2C_lib.c: 74: SSP2BUF = dat;
  1976   0107D2  C002  FF66         	movff	i2c_send@dat,3942	;volatile
  1977   0107D6                     l56:
  1978   0107D6  B064               	btfsc	3940,0,c	;volatile
  1979   0107D8  EFF0  F083         	goto	u61
  1980   0107DC  EFF2  F083         	goto	u60
  1981   0107E0                     u61:
  1982   0107E0  EFEB  F083         	goto	l56
  1983   0107E4                     u60:
  1984   0107E4                     
  1985                           ;I2C_lib.c: 76: i2c_wait();
  1986   0107E4  EC90  F083         	call	_i2c_wait	;wreg free
  1987   0107E8  0012               	return		;funcret
  1988   0107EA                     __end_of_i2c_send:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _i2c_restart *****************
  1992 ;; Defined at:
  1993 ;;		line 51 in file "I2C_lib.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		None
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_rtc1307_read
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text8
  2021   010824                     __ptext8:
  2022                           	callstack 0
  2023   010824                     _i2c_restart:
  2024                           	callstack 29
  2025   010824                     
  2026                           ;I2C_lib.c: 53: RSEN2 = 1;
  2027   010824  8262               	bsf	3938,1,c	;volatile
  2028   010826                     l38:
  2029   010826  B262               	btfsc	3938,1,c	;volatile
  2030   010828  EF18  F084         	goto	u41
  2031   01082C  EF1A  F084         	goto	u40
  2032   010830                     u41:
  2033   010830  EF13  F084         	goto	l38
  2034   010834                     u40:
  2035   010834  0012               	return		;funcret
  2036   010836                     __end_of_i2c_restart:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _i2c_read *****************
  2040 ;; Defined at:
  2041 ;;		line 79 in file "I2C_lib.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  temp            1    1[COMRAM] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      unsigned char 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;Total ram usage:        1 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 1
  2062 ;; This function calls:
  2063 ;;		_i2c_wait
  2064 ;; This function is called by:
  2065 ;;		_rtc1307_read
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text9
  2070   0107B4                     __ptext9:
  2071                           	callstack 0
  2072   0107B4                     _i2c_read:
  2073                           	callstack 28
  2074   0107B4                     
  2075                           ;I2C_lib.c: 81: unsigned char temp;;I2C_lib.c: 82: RCEN2 = 1;
  2076   0107B4  8662               	bsf	3938,3,c	;volatile
  2077   0107B6                     l62:
  2078   0107B6  A064               	btfss	3940,0,c	;volatile
  2079   0107B8  EFE0  F083         	goto	u71
  2080   0107BC  EFE2  F083         	goto	u70
  2081   0107C0                     u71:
  2082   0107C0  EFDB  F083         	goto	l62
  2083   0107C4                     u70:
  2084   0107C4                     
  2085                           ;I2C_lib.c: 84: temp = SSP2BUF;
  2086   0107C4  CF66 F002          	movff	3942,i2c_read@temp	;volatile
  2087   0107C8                     
  2088                           ;I2C_lib.c: 85: i2c_wait();
  2089   0107C8  EC90  F083         	call	_i2c_wait	;wreg free
  2090   0107CC                     
  2091                           ;I2C_lib.c: 86: return temp;
  2092   0107CC  5002               	movf	i2c_read@temp^0,w,c
  2093   0107CE  0012               	return		;funcret
  2094   0107D0                     __end_of_i2c_read:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _i2c_wait *****************
  2098 ;; Defined at:
  2099 ;;		line 67 in file "I2C_lib.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;Total ram usage:        1 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_i2c_send
  2123 ;;		_i2c_read
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text10
  2128   010720                     __ptext10:
  2129                           	callstack 0
  2130   010720                     _i2c_wait:
  2131                           	callstack 28
  2132   010720                     l1058:
  2133   010720  CF62 F001          	movff	3938,??_i2c_wait	;volatile
  2134   010724  0E1F               	movlw	31
  2135   010726  1601               	andwf	??_i2c_wait^0,f,c
  2136   010728  A4D8               	btfss	status,2,c
  2137   01072A  EF99  F083         	goto	u11
  2138   01072E  EF9B  F083         	goto	u10
  2139   010732                     u11:
  2140   010732  EF90  F083         	goto	l1058
  2141   010736                     u10:
  2142   010736  B464               	btfsc	100,2,c	;volatile
  2143   010738  EFA0  F083         	goto	u21
  2144   01073C  EFA2  F083         	goto	u20
  2145   010740                     u21:
  2146   010740  EF90  F083         	goto	l1058
  2147   010744                     u20:
  2148   010744  0012               	return		;funcret
  2149   010746                     __end_of_i2c_wait:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _WriteStringToLCD *****************
  2153 ;; Defined at:
  2154 ;;		line 93 in file "lcd.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  s               2    2[COMRAM] PTR const unsigned char 
  2157 ;;		 -> buffer(100), 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;Total ram usage:        2 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 2
  2176 ;; This function calls:
  2177 ;;		_WriteDataToLCD
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text11
  2184   0106C6                     __ptext11:
  2185                           	callstack 0
  2186   0106C6                     _WriteStringToLCD:
  2187                           	callstack 28
  2188   0106C6                     
  2189                           ;lcd.c: 95: while(*s)
  2190   0106C6  EF6E  F083         	goto	l1610
  2191   0106CA                     l1606:
  2192                           
  2193                           ;lcd.c: 96: WriteDataToLCD(*s++);
  2194   0106CA  C003  FFD9         	movff	WriteStringToLCD@s,fsr2l
  2195   0106CE  C004  FFDA         	movff	WriteStringToLCD@s+1,fsr2h
  2196   0106D2  50DF               	movf	indf2,w,c
  2197   0106D4  ECA3  F083         	call	_WriteDataToLCD
  2198   0106D8  4A03               	infsnz	WriteStringToLCD@s^0,f,c
  2199   0106DA  2A04               	incf	(WriteStringToLCD@s+1)^0,f,c
  2200   0106DC                     l1610:
  2201   0106DC  C003  FFD9         	movff	WriteStringToLCD@s,fsr2l
  2202   0106E0  C004  FFDA         	movff	WriteStringToLCD@s+1,fsr2h
  2203   0106E4  50DF               	movf	indf2,w,c
  2204   0106E6  A4D8               	btfss	status,2,c
  2205   0106E8  EF78  F083         	goto	u621
  2206   0106EC  EF7A  F083         	goto	u620
  2207   0106F0                     u621:
  2208   0106F0  EF65  F083         	goto	l1606
  2209   0106F4                     u620:
  2210   0106F4  0012               	return		;funcret
  2211   0106F6                     __end_of_WriteStringToLCD:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _WriteDataToLCD *****************
  2215 ;; Defined at:
  2216 ;;		line 29 in file "lcd.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  LCDChar         1    wreg     unsigned char 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  LCDChar         1    1[COMRAM] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;Total ram usage:        1 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 1
  2237 ;; This function calls:
  2238 ;;		_ToggleEpinOfLCD
  2239 ;; This function is called by:
  2240 ;;		_WriteStringToLCD
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text12
  2245   010746                     __ptext12:
  2246                           	callstack 0
  2247   010746                     _WriteDataToLCD:
  2248                           	callstack 28
  2249                           
  2250                           ;incstack = 0
  2251                           ;WriteDataToLCD@LCDChar stored from wreg
  2252   010746  6E02               	movwf	WriteDataToLCD@LCDChar^0,c
  2253   010748                     
  2254                           ;lcd.c: 31: RE2 = 1;
  2255   010748  8484               	bsf	3972,2,c	;volatile
  2256                           
  2257                           ;lcd.c: 32: RE3 = 0;
  2258   01074A  9684               	bcf	3972,3,c	;volatile
  2259   01074C                     
  2260                           ;lcd.c: 33: PORTE &= 0x0F;
  2261   01074C  0E0F               	movlw	15
  2262   01074E  1684               	andwf	132,f,c	;volatile
  2263                           
  2264                           ;lcd.c: 34: LATE |= (LCDChar&0xF0);
  2265   010750  5002               	movf	WriteDataToLCD@LCDChar^0,w,c
  2266   010752  0BF0               	andlw	240
  2267   010754  128D               	iorwf	141,f,c	;volatile
  2268   010756                     
  2269                           ;lcd.c: 35: ToggleEpinOfLCD();
  2270   010756  ECC9  F083         	call	_ToggleEpinOfLCD	;wreg free
  2271   01075A                     
  2272                           ;lcd.c: 37: PORTE &= 0x0F;
  2273   01075A  0E0F               	movlw	15
  2274   01075C  1684               	andwf	132,f,c	;volatile
  2275   01075E                     
  2276                           ;lcd.c: 38: LATE |= ((LCDChar<<4)&0xF0);
  2277   01075E  3802               	swapf	WriteDataToLCD@LCDChar^0,w,c
  2278   010760  0BF0               	andlw	240
  2279   010762  0BF0               	andlw	240
  2280   010764  128D               	iorwf	141,f,c	;volatile
  2281   010766                     
  2282                           ;lcd.c: 39: ToggleEpinOfLCD();
  2283   010766  ECC9  F083         	call	_ToggleEpinOfLCD	;wreg free
  2284   01076A  0012               	return		;funcret
  2285   01076C                     __end_of_WriteDataToLCD:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _UART_Write *****************
  2289 ;; Defined at:
  2290 ;;		line 42 in file "URAT_lib.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  UART_DATA       1    wreg     unsigned char 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  UART_DATA       1    0[COMRAM] unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;Total ram usage:        1 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text13
  2318   0107EA                     __ptext13:
  2319                           	callstack 0
  2320   0107EA                     _UART_Write:
  2321                           	callstack 30
  2322                           
  2323                           ;incstack = 0
  2324                           ;UART_Write@UART_DATA stored from wreg
  2325   0107EA  6E01               	movwf	UART_Write@UART_DATA^0,c
  2326   0107EC                     l110:
  2327   0107EC  A2AC               	btfss	4012,1,c	;volatile
  2328   0107EE  EFFB  F083         	goto	u221
  2329   0107F2  EFFD  F083         	goto	u220
  2330   0107F6                     u221:
  2331   0107F6  EFF6  F083         	goto	l110
  2332   0107FA                     u220:
  2333   0107FA                     
  2334                           ;URAT_lib.c: 45: TXREG = UART_DATA;
  2335   0107FA  C001  FFAD         	movff	UART_Write@UART_DATA,4013	;volatile
  2336   0107FE  0012               	return		;funcret
  2337   010800                     __end_of_UART_Write:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _UART_Init *****************
  2341 ;; Defined at:
  2342 ;;		line 18 in file "URAT_lib.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  baudrate        4   14[COMRAM] const long 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  x               2   26[COMRAM] unsigned int 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      unsigned char 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;Total ram usage:       14 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 1
  2363 ;; This function calls:
  2364 ;;		___aldiv
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text14
  2371   0104C8                     __ptext14:
  2372                           	callstack 0
  2373   0104C8                     _UART_Init:
  2374                           	callstack 29
  2375   0104C8                     
  2376                           ;URAT_lib.c: 20: unsigned int x;;URAT_lib.c: 21: x = (10000000 - baudrate*16)/(baudrate*
      +                          16);
  2377   0104C8  C00F  F013         	movff	UART_Init@baudrate,??_UART_Init
  2378   0104CC  C010  F014         	movff	UART_Init@baudrate+1,??_UART_Init+1
  2379   0104D0  C011  F015         	movff	UART_Init@baudrate+2,??_UART_Init+2
  2380   0104D4  C012  F016         	movff	UART_Init@baudrate+3,??_UART_Init+3
  2381   0104D8  0E04               	movlw	4
  2382   0104DA                     u535:
  2383   0104DA  90D8               	bcf	status,0,c
  2384   0104DC  3613               	rlcf	??_UART_Init^0,f,c
  2385   0104DE  3614               	rlcf	(??_UART_Init+1)^0,f,c
  2386   0104E0  3615               	rlcf	(??_UART_Init+2)^0,f,c
  2387   0104E2  3616               	rlcf	(??_UART_Init+3)^0,f,c
  2388   0104E4  2EE8               	decfsz	wreg,f,c
  2389   0104E6  EF6D  F082         	goto	u535
  2390   0104EA  5013               	movf	??_UART_Init^0,w,c
  2391   0104EC  0880               	sublw	128
  2392   0104EE  6E01               	movwf	___aldiv@dividend^0,c
  2393   0104F0  0E96               	movlw	150
  2394   0104F2  5414               	subfwb	(??_UART_Init+1)^0,w,c
  2395   0104F4  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2396   0104F6  0E98               	movlw	152
  2397   0104F8  5415               	subfwb	(??_UART_Init+2)^0,w,c
  2398   0104FA  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2399   0104FC  0E00               	movlw	0
  2400   0104FE  5416               	subfwb	(??_UART_Init+3)^0,w,c
  2401   010500  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2402   010502  C00F  F017         	movff	UART_Init@baudrate,??_UART_Init+4
  2403   010506  C010  F018         	movff	UART_Init@baudrate+1,??_UART_Init+5
  2404   01050A  C011  F019         	movff	UART_Init@baudrate+2,??_UART_Init+6
  2405   01050E  C012  F01A         	movff	UART_Init@baudrate+3,??_UART_Init+7
  2406   010512  0E04               	movlw	4
  2407   010514                     u545:
  2408   010514  90D8               	bcf	status,0,c
  2409   010516  3617               	rlcf	(??_UART_Init+4)^0,f,c
  2410   010518  3618               	rlcf	(??_UART_Init+5)^0,f,c
  2411   01051A  3619               	rlcf	(??_UART_Init+6)^0,f,c
  2412   01051C  361A               	rlcf	(??_UART_Init+7)^0,f,c
  2413   01051E  2EE8               	decfsz	wreg,f,c
  2414   010520  EF8A  F082         	goto	u545
  2415   010524  C017  F005         	movff	??_UART_Init+4,___aldiv@divisor
  2416   010528  C018  F006         	movff	??_UART_Init+5,___aldiv@divisor+1
  2417   01052C  C019  F007         	movff	??_UART_Init+6,___aldiv@divisor+2
  2418   010530  C01A  F008         	movff	??_UART_Init+7,___aldiv@divisor+3
  2419   010534  ECDE  F081         	call	___aldiv	;wreg free
  2420   010538  C001  F01B         	movff	?___aldiv,UART_Init@x
  2421   01053C  C002  F01C         	movff	?___aldiv+1,UART_Init@x+1
  2422   010540                     
  2423                           ;URAT_lib.c: 22: SPBRG1 = x;
  2424   010540  C01B  FFAF         	movff	UART_Init@x,4015	;volatile
  2425   010544                     
  2426                           ;URAT_lib.c: 23: TXSTA1bits.BRGH = 1;
  2427   010544  84AC               	bsf	172,2,c	;volatile
  2428   010546                     
  2429                           ;URAT_lib.c: 24: TXSTA1bits.SYNC = 0;
  2430   010546  98AC               	bcf	172,4,c	;volatile
  2431   010548                     
  2432                           ;URAT_lib.c: 25: RCSTA1bits.SPEN = 1;
  2433   010548  8EAB               	bsf	171,7,c	;volatile
  2434   01054A                     
  2435                           ;URAT_lib.c: 26: TRISC7 = 1;
  2436   01054A  8E94               	bsf	3988,7,c	;volatile
  2437   01054C                     
  2438                           ;URAT_lib.c: 27: TRISC6 = 0;
  2439   01054C  9C94               	bcf	3988,6,c	;volatile
  2440   01054E                     
  2441                           ;URAT_lib.c: 28: CREN = 1;
  2442   01054E  88AB               	bsf	4011,4,c	;volatile
  2443   010550                     
  2444                           ;URAT_lib.c: 29: TXSTA1bits.TXEN = 1;
  2445   010550  8AAC               	bsf	172,5,c	;volatile
  2446   010552  0004               	clrwdt		;# 
  2447   010554  0012               	return		;funcret
  2448   010556                     __end_of_UART_Init:
  2449                           	callstack 0
  2450                           
  2451 ;; *************** function ___aldiv *****************
  2452 ;; Defined at:
  2453 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  dividend        4    0[COMRAM] long 
  2456 ;;  divisor         4    4[COMRAM] long 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  quotient        4   10[COMRAM] long 
  2459 ;;  sign            1    9[COMRAM] unsigned char 
  2460 ;;  counter         1    8[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  4    0[COMRAM] long 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:       14 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_UART_Init
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text15
  2484   0103BC                     __ptext15:
  2485                           	callstack 0
  2486   0103BC                     ___aldiv:
  2487                           	callstack 29
  2488   0103BC  0E00               	movlw	0
  2489   0103BE  6E0A               	movwf	___aldiv@sign^0,c
  2490   0103C0  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2491   0103C2  EFE7  F081         	goto	u410
  2492   0103C6  EFE5  F081         	goto	u411
  2493   0103CA                     u411:
  2494   0103CA  EFF1  F081         	goto	l1450
  2495   0103CE                     u410:
  2496   0103CE  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2497   0103D0  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2498   0103D2  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2499   0103D4  6C05               	negf	___aldiv@divisor^0,c
  2500   0103D6  0E00               	movlw	0
  2501   0103D8  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2502   0103DA  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2503   0103DC  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2504   0103DE  0E01               	movlw	1
  2505   0103E0  6E0A               	movwf	___aldiv@sign^0,c
  2506   0103E2                     l1450:
  2507   0103E2  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2508   0103E4  EFF8  F081         	goto	u420
  2509   0103E8  EFF6  F081         	goto	u421
  2510   0103EC                     u421:
  2511   0103EC  EF02  F082         	goto	l1456
  2512   0103F0                     u420:
  2513   0103F0  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2514   0103F2  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2515   0103F4  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2516   0103F6  6C01               	negf	___aldiv@dividend^0,c
  2517   0103F8  0E00               	movlw	0
  2518   0103FA  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2519   0103FC  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2520   0103FE  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2521   010400  0E01               	movlw	1
  2522   010402  1A0A               	xorwf	___aldiv@sign^0,f,c
  2523   010404                     l1456:
  2524   010404  0E00               	movlw	0
  2525   010406  6E0B               	movwf	___aldiv@quotient^0,c
  2526   010408  0E00               	movlw	0
  2527   01040A  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2528   01040C  0E00               	movlw	0
  2529   01040E  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2530   010410  0E00               	movlw	0
  2531   010412  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2532   010414  5005               	movf	___aldiv@divisor^0,w,c
  2533   010416  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2534   010418  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2535   01041A  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2536   01041C  B4D8               	btfsc	status,2,c
  2537   01041E  EF13  F082         	goto	u431
  2538   010422  EF15  F082         	goto	u430
  2539   010426                     u431:
  2540   010426  EF4B  F082         	goto	l1478
  2541   01042A                     u430:
  2542   01042A  0E01               	movlw	1
  2543   01042C  6E09               	movwf	___aldiv@counter^0,c
  2544   01042E  EF1F  F082         	goto	l1464
  2545   010432                     l1462:
  2546   010432  90D8               	bcf	status,0,c
  2547   010434  3605               	rlcf	___aldiv@divisor^0,f,c
  2548   010436  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2549   010438  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2550   01043A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2551   01043C  2A09               	incf	___aldiv@counter^0,f,c
  2552   01043E                     l1464:
  2553   01043E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2554   010440  EF24  F082         	goto	u441
  2555   010444  EF26  F082         	goto	u440
  2556   010448                     u441:
  2557   010448  EF19  F082         	goto	l1462
  2558   01044C                     u440:
  2559   01044C                     l1466:
  2560   01044C  90D8               	bcf	status,0,c
  2561   01044E  360B               	rlcf	___aldiv@quotient^0,f,c
  2562   010450  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2563   010452  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2564   010454  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2565   010456  5005               	movf	___aldiv@divisor^0,w,c
  2566   010458  5C01               	subwf	___aldiv@dividend^0,w,c
  2567   01045A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2568   01045C  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2569   01045E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2570   010460  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2571   010462  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2572   010464  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2573   010466  A0D8               	btfss	status,0,c
  2574   010468  EF38  F082         	goto	u451
  2575   01046C  EF3A  F082         	goto	u450
  2576   010470                     u451:
  2577   010470  EF43  F082         	goto	l1474
  2578   010474                     u450:
  2579   010474  5005               	movf	___aldiv@divisor^0,w,c
  2580   010476  5E01               	subwf	___aldiv@dividend^0,f,c
  2581   010478  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2582   01047A  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2583   01047C  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2584   01047E  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2585   010480  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2586   010482  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2587   010484  800B               	bsf	___aldiv@quotient^0,0,c
  2588   010486                     l1474:
  2589   010486  90D8               	bcf	status,0,c
  2590   010488  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2591   01048A  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2592   01048C  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2593   01048E  3205               	rrcf	___aldiv@divisor^0,f,c
  2594   010490  2E09               	decfsz	___aldiv@counter^0,f,c
  2595   010492  EF26  F082         	goto	l1466
  2596   010496                     l1478:
  2597   010496  500A               	movf	___aldiv@sign^0,w,c
  2598   010498  B4D8               	btfsc	status,2,c
  2599   01049A  EF51  F082         	goto	u461
  2600   01049E  EF53  F082         	goto	u460
  2601   0104A2                     u461:
  2602   0104A2  EF5B  F082         	goto	l1482
  2603   0104A6                     u460:
  2604   0104A6  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2605   0104A8  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2606   0104AA  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2607   0104AC  6C0B               	negf	___aldiv@quotient^0,c
  2608   0104AE  0E00               	movlw	0
  2609   0104B0  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2610   0104B2  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2611   0104B4  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2612   0104B6                     l1482:
  2613   0104B6  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2614   0104BA  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2615   0104BE  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2616   0104C2  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2617   0104C6  0012               	return		;funcret
  2618   0104C8                     __end_of___aldiv:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function _RS485_Init *****************
  2622 ;; Defined at:
  2623 ;;		line 35 in file "URAT_lib.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		None
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;Total ram usage:        0 bytes
  2642 ;; Hardware stack levels used: 1
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text16
  2651   01085A                     __ptext16:
  2652                           	callstack 0
  2653   01085A                     _RS485_Init:
  2654                           	callstack 30
  2655   01085A                     
  2656                           ;URAT_lib.c: 37: TRISCbits.RC6=0;
  2657   01085A  9C94               	bcf	148,6,c	;volatile
  2658                           
  2659                           ;URAT_lib.c: 38: TRISCbits.RC7=1;
  2660   01085C  8E94               	bsf	148,7,c	;volatile
  2661                           
  2662                           ;URAT_lib.c: 39: TRISCbits.RC2=0;
  2663   01085E  9494               	bcf	148,2,c	;volatile
  2664   010860  0012               	return		;funcret
  2665   010862                     __end_of_RS485_Init:
  2666                           	callstack 0
  2667                           
  2668 ;; *************** function _InitLCD *****************
  2669 ;; Defined at:
  2670 ;;		line 42 in file "lcd.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;Total ram usage:        0 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; Hardware stack levels required when called: 2
  2691 ;; This function calls:
  2692 ;;		_ToggleEpinOfLCD
  2693 ;;		_WriteCommandToLCD
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text17
  2700   01062E                     __ptext17:
  2701                           	callstack 0
  2702   01062E                     _InitLCD:
  2703                           	callstack 28
  2704   01062E                     
  2705                           ;lcd.c: 45: RD0 = 0;
  2706   01062E  9083               	bcf	3971,0,c	;volatile
  2707                           
  2708                           ;lcd.c: 46: RE2 = 0;
  2709   010630  9484               	bcf	3972,2,c	;volatile
  2710                           
  2711                           ;lcd.c: 47: RE3 = 0;
  2712   010632  9684               	bcf	3972,3,c	;volatile
  2713                           
  2714                           ;lcd.c: 48: RE4 = 0;
  2715   010634  9884               	bcf	3972,4,c	;volatile
  2716                           
  2717                           ;lcd.c: 49: RE5 = 0;
  2718   010636  9A84               	bcf	3972,5,c	;volatile
  2719                           
  2720                           ;lcd.c: 50: RE6 = 0;
  2721   010638  9C84               	bcf	3972,6,c	;volatile
  2722                           
  2723                           ;lcd.c: 51: RE7 = 0;
  2724   01063A  9E84               	bcf	3972,7,c	;volatile
  2725                           
  2726                           ;lcd.c: 52: TRISD0 = 0;
  2727   01063C  9095               	bcf	3989,0,c	;volatile
  2728                           
  2729                           ;lcd.c: 53: TRISE2 = 0;
  2730   01063E  9496               	bcf	3990,2,c	;volatile
  2731                           
  2732                           ;lcd.c: 54: TRISE4 = 0;
  2733   010640  9896               	bcf	3990,4,c	;volatile
  2734                           
  2735                           ;lcd.c: 55: TRISE5 = 0;
  2736   010642  9A96               	bcf	3990,5,c	;volatile
  2737                           
  2738                           ;lcd.c: 56: TRISE6 = 0;
  2739   010644  9C96               	bcf	3990,6,c	;volatile
  2740                           
  2741                           ;lcd.c: 57: TRISE7 = 0;
  2742   010646  9E96               	bcf	3990,7,c	;volatile
  2743   010648                     
  2744                           ;lcd.c: 62: PORTE &= 0x0F;
  2745   010648  0E0F               	movlw	15
  2746   01064A  1684               	andwf	132,f,c	;volatile
  2747                           
  2748                           ;lcd.c: 63: LATE |= 0x30;
  2749   01064C  0E30               	movlw	48
  2750   01064E  128D               	iorwf	141,f,c	;volatile
  2751   010650                     
  2752                           ;lcd.c: 64: ToggleEpinOfLCD();
  2753   010650  ECC9  F083         	call	_ToggleEpinOfLCD	;wreg free
  2754   010654                     
  2755                           ;lcd.c: 68: PORTE &= 0x0F;
  2756   010654  0E0F               	movlw	15
  2757   010656  1684               	andwf	132,f,c	;volatile
  2758   010658                     
  2759                           ;lcd.c: 69: LATE |= 0x30;
  2760   010658  0E30               	movlw	48
  2761   01065A  128D               	iorwf	141,f,c	;volatile
  2762   01065C                     
  2763                           ;lcd.c: 70: ToggleEpinOfLCD();
  2764   01065C  ECC9  F083         	call	_ToggleEpinOfLCD	;wreg free
  2765                           
  2766                           ;lcd.c: 74: PORTE &= 0x0F;
  2767   010660  0E0F               	movlw	15
  2768   010662  1684               	andwf	132,f,c	;volatile
  2769                           
  2770                           ;lcd.c: 75: LATE |= 0x30;
  2771   010664  0E30               	movlw	48
  2772   010666  128D               	iorwf	141,f,c	;volatile
  2773   010668                     
  2774                           ;lcd.c: 76: ToggleEpinOfLCD();
  2775   010668  ECC9  F083         	call	_ToggleEpinOfLCD	;wreg free
  2776   01066C                     
  2777                           ;lcd.c: 80: PORTE &= 0x0F;
  2778   01066C  0E0F               	movlw	15
  2779   01066E  1684               	andwf	132,f,c	;volatile
  2780   010670                     
  2781                           ;lcd.c: 81: LATE |= 0x20;
  2782   010670  8A8D               	bsf	141,5,c	;volatile
  2783   010672                     
  2784                           ;lcd.c: 82: ToggleEpinOfLCD();
  2785   010672  ECC9  F083         	call	_ToggleEpinOfLCD	;wreg free
  2786   010676                     
  2787                           ;lcd.c: 86: WriteCommandToLCD(0x28);
  2788   010676  0E28               	movlw	40
  2789   010678  ECB6  F083         	call	_WriteCommandToLCD
  2790   01067C                     
  2791                           ;lcd.c: 87: WriteCommandToLCD(0x0c);
  2792   01067C  0E0C               	movlw	12
  2793   01067E  ECB6  F083         	call	_WriteCommandToLCD
  2794   010682                     
  2795                           ;lcd.c: 88: WriteCommandToLCD(0x01);
  2796   010682  0E01               	movlw	1
  2797   010684  ECB6  F083         	call	_WriteCommandToLCD
  2798   010688                     
  2799                           ;lcd.c: 89: WriteCommandToLCD(0x06);
  2800   010688  0E06               	movlw	6
  2801   01068A  ECB6  F083         	call	_WriteCommandToLCD
  2802   01068E  0012               	return		;funcret
  2803   010690                     __end_of_InitLCD:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function _ClearLCDScreen *****************
  2807 ;; Defined at:
  2808 ;;		line 100 in file "lcd.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 2
  2829 ;; This function calls:
  2830 ;;		_WriteCommandToLCD
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text18
  2837   010862                     __ptext18:
  2838                           	callstack 0
  2839   010862                     _ClearLCDScreen:
  2840                           	callstack 28
  2841   010862                     
  2842                           ;lcd.c: 102: WriteCommandToLCD(0x01);
  2843   010862  0E01               	movlw	1
  2844   010864  ECB6  F083         	call	_WriteCommandToLCD
  2845   010868  0012               	return		;funcret
  2846   01086A                     __end_of_ClearLCDScreen:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function _WriteCommandToLCD *****************
  2850 ;; Defined at:
  2851 ;;		line 16 in file "lcd.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  Command         1    wreg     unsigned char 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  Command         1    1[COMRAM] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;Total ram usage:        1 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 1
  2872 ;; This function calls:
  2873 ;;		_ToggleEpinOfLCD
  2874 ;; This function is called by:
  2875 ;;		_main
  2876 ;;		_InitLCD
  2877 ;;		_ClearLCDScreen
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text19
  2882   01076C                     __ptext19:
  2883                           	callstack 0
  2884   01076C                     _WriteCommandToLCD:
  2885                           	callstack 29
  2886                           
  2887                           ;incstack = 0
  2888                           ;WriteCommandToLCD@Command stored from wreg
  2889   01076C  6E02               	movwf	WriteCommandToLCD@Command^0,c
  2890   01076E                     
  2891                           ;lcd.c: 18: RE2 = 0;
  2892   01076E  9484               	bcf	3972,2,c	;volatile
  2893                           
  2894                           ;lcd.c: 19: RE3 = 0;
  2895   010770  9684               	bcf	3972,3,c	;volatile
  2896   010772                     
  2897                           ;lcd.c: 20: PORTE &= 0x0F;
  2898   010772  0E0F               	movlw	15
  2899   010774  1684               	andwf	132,f,c	;volatile
  2900                           
  2901                           ;lcd.c: 21: LATE |= (Command&0xF0);
  2902   010776  5002               	movf	WriteCommandToLCD@Command^0,w,c
  2903   010778  0BF0               	andlw	240
  2904   01077A  128D               	iorwf	141,f,c	;volatile
  2905   01077C                     
  2906                           ;lcd.c: 22: ToggleEpinOfLCD();
  2907   01077C  ECC9  F083         	call	_ToggleEpinOfLCD	;wreg free
  2908   010780                     
  2909                           ;lcd.c: 24: PORTE &= 0x0F;
  2910   010780  0E0F               	movlw	15
  2911   010782  1684               	andwf	132,f,c	;volatile
  2912   010784                     
  2913                           ;lcd.c: 25: LATE |= ((Command<<4)&0xF0);
  2914   010784  3802               	swapf	WriteCommandToLCD@Command^0,w,c
  2915   010786  0BF0               	andlw	240
  2916   010788  0BF0               	andlw	240
  2917   01078A  128D               	iorwf	141,f,c	;volatile
  2918   01078C                     
  2919                           ;lcd.c: 26: ToggleEpinOfLCD();
  2920   01078C  ECC9  F083         	call	_ToggleEpinOfLCD	;wreg free
  2921   010790  0012               	return		;funcret
  2922   010792                     __end_of_WriteCommandToLCD:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _ToggleEpinOfLCD *****************
  2926 ;; Defined at:
  2927 ;;		line 6 in file "lcd.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;Total ram usage:        1 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_WriteCommandToLCD
  2951 ;;		_WriteDataToLCD
  2952 ;;		_InitLCD
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text20
  2957   010792                     __ptext20:
  2958                           	callstack 0
  2959   010792                     _ToggleEpinOfLCD:
  2960                           	callstack 28
  2961   010792                     
  2962                           ;lcd.c: 8: RD0 = 1;
  2963   010792  8083               	bsf	3971,0,c	;volatile
  2964   010794                     
  2965                           ;lcd.c: 9: _delay((unsigned long)((1)*(10000000/4000.0)));
  2966   010794  0E04               	movlw	4
  2967   010796  6E01               	movwf	??_ToggleEpinOfLCD^0,c
  2968   010798  0E3E               	movlw	62
  2969   01079A                     u707:
  2970   01079A  2EE8               	decfsz	wreg,f,c
  2971   01079C  D7FE               	bra	u707
  2972   01079E  2E01               	decfsz	??_ToggleEpinOfLCD^0,f,c
  2973   0107A0  D7FC               	bra	u707
  2974   0107A2                     
  2975                           ;lcd.c: 11: RD0 = 0;
  2976   0107A2  9083               	bcf	3971,0,c	;volatile
  2977                           
  2978                           ;lcd.c: 13: _delay((unsigned long)((1)*(10000000/4000.0)));
  2979   0107A4  0E04               	movlw	4
  2980   0107A6  6E01               	movwf	??_ToggleEpinOfLCD^0,c
  2981   0107A8  0E3E               	movlw	62
  2982   0107AA                     u717:
  2983   0107AA  2EE8               	decfsz	wreg,f,c
  2984   0107AC  D7FE               	bra	u717
  2985   0107AE  2E01               	decfsz	??_ToggleEpinOfLCD^0,f,c
  2986   0107B0  D7FC               	bra	u717
  2987   0107B2  0012               	return		;funcret
  2988   0107B4                     __end_of_ToggleEpinOfLCD:
  2989                           	callstack 0
  2990                           
  2991 ;; *************** function _BCD2UpperCh *****************
  2992 ;; Defined at:
  2993 ;;		line 159 in file "Test_code_RTC1307_UART.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  bcd             1    wreg     unsigned char 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  bcd             1    0[COMRAM] unsigned char 
  2998 ;;  temp            1    1[COMRAM] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      unsigned char 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;Total ram usage:        2 bytes
  3013 ;; Hardware stack levels used: 1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_main
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text21
  3022   010836                     __ptext21:
  3023                           	callstack 0
  3024   010836                     _BCD2UpperCh:
  3025                           	callstack 30
  3026                           
  3027                           ;incstack = 0
  3028                           ;BCD2UpperCh@bcd stored from wreg
  3029   010836  6E01               	movwf	BCD2UpperCh@bcd^0,c
  3030   010838                     
  3031                           ;Test_code_RTC1307_UART.c: 161: unsigned char temp;;Test_code_RTC1307_UART.c: 162: temp 
      +                          = bcd >> 4;
  3032   010838  3801               	swapf	BCD2UpperCh@bcd^0,w,c
  3033   01083A  0B0F               	andlw	15
  3034   01083C  6E02               	movwf	BCD2UpperCh@temp^0,c
  3035                           
  3036                           ;Test_code_RTC1307_UART.c: 163: temp = temp | 0x30;
  3037   01083E  5002               	movf	BCD2UpperCh@temp^0,w,c
  3038   010840  0930               	iorlw	48
  3039   010842  6E02               	movwf	BCD2UpperCh@temp^0,c
  3040   010844                     
  3041                           ;Test_code_RTC1307_UART.c: 164: return(temp);
  3042   010844  5002               	movf	BCD2UpperCh@temp^0,w,c
  3043   010846  0012               	return		;funcret
  3044   010848                     __end_of_BCD2UpperCh:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function _BCD2LowerCh *****************
  3048 ;; Defined at:
  3049 ;;		line 166 in file "Test_code_RTC1307_UART.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  bcd             1    wreg     unsigned char 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  bcd             1    0[COMRAM] unsigned char 
  3054 ;;  temp            1    1[COMRAM] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      unsigned char 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;Total ram usage:        2 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_main
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text22
  3078   010848                     __ptext22:
  3079                           	callstack 0
  3080   010848                     _BCD2LowerCh:
  3081                           	callstack 30
  3082                           
  3083                           ;incstack = 0
  3084                           ;BCD2LowerCh@bcd stored from wreg
  3085   010848  6E01               	movwf	BCD2LowerCh@bcd^0,c
  3086   01084A                     
  3087                           ;Test_code_RTC1307_UART.c: 168: unsigned char temp;;Test_code_RTC1307_UART.c: 169: temp 
      +                          = bcd & 0x0F;
  3088   01084A  5001               	movf	BCD2LowerCh@bcd^0,w,c
  3089   01084C  0B0F               	andlw	15
  3090   01084E  6E02               	movwf	BCD2LowerCh@temp^0,c
  3091                           
  3092                           ;Test_code_RTC1307_UART.c: 170: temp = temp | 0x30;
  3093   010850  5002               	movf	BCD2LowerCh@temp^0,w,c
  3094   010852  0930               	iorlw	48
  3095   010854  6E02               	movwf	BCD2LowerCh@temp^0,c
  3096   010856                     
  3097                           ;Test_code_RTC1307_UART.c: 171: return(temp);
  3098   010856  5002               	movf	BCD2LowerCh@temp^0,w,c
  3099   010858  0012               	return		;funcret
  3100   01085A                     __end_of_BCD2LowerCh:
  3101                           	callstack 0
  3102                           
  3103                           	psect	rparam
  3104   000000                     
  3105                           	psect	config
  3106                           
  3107                           ;Config register CONFIG1L @ 0x1FFF8
  3108                           ;	Watchdog Timer Enable bit
  3109                           ;	WDTEN = ON, WDT enabled
  3110                           ;	Stack Overflow/Underflow Reset Enable bit
  3111                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
  3112                           ;	Extended Instruction Set Enable bit
  3113                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3114                           ;	Background Debugger Enable bit
  3115                           ;	DEBUG = 0x1, unprogrammed default
  3116   01FFF8                     	org	131064
  3117   01FFF8  A1                 	db	161
  3118                           
  3119                           ;Config register CONFIG1H @ 0x1FFF9
  3120                           ;	Code Protection bit
  3121                           ;	CP0 = OFF, Program memory is not code-protected
  3122   01FFF9                     	org	131065
  3123   01FFF9  F4                 	db	244
  3124                           
  3125                           ;Config register CONFIG2L @ 0x1FFFA
  3126                           ;	Oscillator Selection bits
  3127                           ;	FOSC = HS, HS oscillator
  3128                           ;	Default/Reset System Clock Select bit
  3129                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
  3130                           ;	Fail-Safe Clock Monitor Enable
  3131                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3132                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  3133                           ;	IESO = ON, Two-Speed Start-up enabled
  3134   01FFFA                     	org	131066
  3135   01FFFA  C4                 	db	196
  3136                           
  3137                           ;Config register CONFIG2H @ 0x1FFFB
  3138                           ;	Watchdog Timer Postscaler Select bits
  3139                           ;	WDTPS = 8192, 1:8192
  3140   01FFFB                     	org	131067
  3141   01FFFB  FD                 	db	253
  3142                           
  3143                           ;Config register CONFIG3L @ 0x1FFFC
  3144                           ;	unspecified, using default values
  3145   01FFFC                     	org	131068
  3146   01FFFC  F8                 	db	248
  3147                           
  3148                           ;Config register CONFIG3H @ 0x1FFFD
  3149                           ;	ECCP2 MUX bit
  3150                           ;	CCP2MX = DEFAULT, ECCP2/P2A is multiplexed with RC1
  3151   01FFFD                     	org	131069
  3152   01FFFD  F3                 	db	243
  3153                           tosu	equ	0xFFF
  3154                           tosh	equ	0xFFE
  3155                           tosl	equ	0xFFD
  3156                           stkptr	equ	0xFFC
  3157                           pclatu	equ	0xFFB
  3158                           pclath	equ	0xFFA
  3159                           pcl	equ	0xFF9
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           prodh	equ	0xFF4
  3165                           prodl	equ	0xFF3
  3166                           indf0	equ	0xFEF
  3167                           postinc0	equ	0xFEE
  3168                           postdec0	equ	0xFED
  3169                           preinc0	equ	0xFEC
  3170                           plusw0	equ	0xFEB
  3171                           fsr0h	equ	0xFEA
  3172                           fsr0l	equ	0xFE9
  3173                           wreg	equ	0xFE8
  3174                           indf1	equ	0xFE7
  3175                           postinc1	equ	0xFE6
  3176                           postdec1	equ	0xFE5
  3177                           preinc1	equ	0xFE4
  3178                           plusw1	equ	0xFE3
  3179                           fsr1h	equ	0xFE2
  3180                           fsr1l	equ	0xFE1
  3181                           bsr	equ	0xFE0
  3182                           indf2	equ	0xFDF
  3183                           postinc2	equ	0xFDE
  3184                           postdec2	equ	0xFDD
  3185                           preinc2	equ	0xFDC
  3186                           plusw2	equ	0xFDB
  3187                           fsr2h	equ	0xFDA
  3188                           fsr2l	equ	0xFD9
  3189                           status	equ	0xFD8

Data Sizes:
    Strings     32
    Constant    522
    Data        2
    BSS         154
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      60
    BANK0           160      0     140
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    C	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    str	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), STR_1(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> buffer(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    WriteStringToLCD@s	PTR const unsigned char  size(2) Largest target is 100
		 -> buffer(BANK0[100]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _rtc1307_read->_i2c_read
    _rtc1307_read->_i2c_send
    _i2c_send->_i2c_wait
    _i2c_read->_i2c_wait
    _WriteStringToLCD->_WriteDataToLCD
    _WriteDataToLCD->_ToggleEpinOfLCD
    _UART_Init->___aldiv
    _InitLCD->_WriteCommandToLCD
    _ClearLCDScreen->_WriteCommandToLCD
    _WriteCommandToLCD->_ToggleEpinOfLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    2542
                                             36 COMRAM     8     8      0
                        _BCD2LowerCh
                        _BCD2UpperCh
                     _ClearLCDScreen
                            _InitLCD
                         _RS485_Init
                          _UART_Init
                         _UART_Write
                  _WriteCommandToLCD
                   _WriteStringToLCD
                       _rtc1307_read
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    17     16    1406
                                             12 COMRAM    24     8     16
                        _BCD2LowerCh (ARG)
                        _BCD2UpperCh (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _rtc1307_read                                         2     2      0      60
                                              2 COMRAM     2     2      0
                           _i2c_read
                        _i2c_restart
                           _i2c_send
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_send                                             1     1      0      15
                                              1 COMRAM     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             1     1      0      15
                                              1 COMRAM     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteStringToLCD                                     2     0      2     151
                                              2 COMRAM     2     0      2
                     _WriteDataToLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataToLCD                                       1     1      0      30
                                              1 COMRAM     1     1      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4     595
                                             14 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      30
                    _ToggleEpinOfLCD
                  _WriteCommandToLCD
 ---------------------------------------------------------------------------------
 (1) _ClearLCDScreen                                       0     0      0      30
                  _WriteCommandToLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCommandToLCD                                    1     1      0      30
                                              1 COMRAM     1     1      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (3) _ToggleEpinOfLCD                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BCD2UpperCh                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _BCD2LowerCh                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BCD2LowerCh
   _BCD2UpperCh
   _ClearLCDScreen
     _WriteCommandToLCD
       _ToggleEpinOfLCD
   _InitLCD
     _ToggleEpinOfLCD
     _WriteCommandToLCD
   _RS485_Init
   _UART_Init
     ___aldiv
   _UART_Write
   _WriteCommandToLCD
   _WriteStringToLCD
     _WriteDataToLCD
       _ToggleEpinOfLCD
   _rtc1307_read
     _i2c_read
       _i2c_wait
     _i2c_restart
     _i2c_send
       _i2c_wait
     _i2c_start
     _i2c_stop
   _sprintf
     _BCD2LowerCh (ARG)
     _BCD2UpperCh (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      44        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      8C       5       87.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      3C       1       63.2%
BITBIGSFRhh         50      0       0      37        0.0%
BITBIGSFRlhll       1C      0       0      42        0.0%
BITBIGSFRhllh        C      0       0      38        0.0%
BITBIGSFRlhlh        7      0       0      41        0.0%
BITBIGSFRhlll        7      0       0      39        0.0%
BITBIGSFRlhh         6      0       0      40        0.0%
BITBIGSFRll          2      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C8      14        0.0%
DATA                 0      0      C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jan 16 22:01:07 2023

                        _C 002D                          _a 0060                         l32 0814  
                       l41 0834                         l35 0822                         l44 0802  
                       l53 0744                         l62 07B6                         l38 0826  
                       l47 0810                         l64 07C4                         l56 07D6  
                       l65 07CE                         l59 07E8                         u10 0736  
                       u11 0732                         u20 0744                         u21 0740  
                       u30 0822                         u31 081E                         u40 0834  
                       u41 0830                         u50 0810                         u51 080C  
                       u60 07E4                         u61 07E0                         u70 07C4  
                       u71 07C0                        l110 07EC                        l104 0554  
                      l113 07FE                        l107 0860                        _BF2 007B20  
                      l308 03BA                        l253 07B2                        l262 068E  
                      l271 0868                        l192 0846                        l256 0790  
                      l195 0858                        l259 076A                        l268 06F4  
                      l390 04C6                        l198 071E                        l800 0624  
                      l807 062C                        l790 05C0                        l797 05C8  
                      _RD0 007C18                        _RE2 007C22                        _RE3 007C23  
                      _RE4 007C24                        _RE5 007C25                        _RE6 007C26  
                      _RE7 007C27                        u220 07FA                        u221 07F6  
                      u410 03CE                        u411 03CA                        u420 03F0  
                      u500 05DC                        u421 03EC                        u501 05D8  
                      u430 042A                        u510 05FA                        u431 0426  
                      u511 05F6                        u440 044C                        u520 0610  
                      u600 0388                        u441 0448                        u521 060C  
                      u601 0384                        u450 0474                        u610 03AE  
                      u451 0470                        u611 03AA                        u460 04A6  
                      u620 06F4                        u461 04A2                        u621 06F0  
                      u470 0570                        u550 0226                        u630 0132  
                      u535 04DA                        u471 056C                        u551 0222  
                      u631 012E                        u480 058E                        u560 0298  
                      u640 0142                        u545 0514                        u481 058A  
                      u561 0294                        u641 013E                        u490 05AA  
                      u570 02D8                        u650 01F0                        u707 079A  
                      u491 05A6                        u571 02D4                        u651 01EC  
                      u580 02F0                        u660 0200                        u717 07AA  
                      u581 02EC                        u661 01FC                        u590 0306  
                      u591 0302                        u677 001A                        u687 010E  
                      u697 01CC                        _day 0037                        _min 0039  
                      _sec 003A                        _str 002F                        wreg 000FE8  
               _TXSTA1bits 000FAC                ?_RS485_Init 0001                       l1100 074C  
                     l1102 0756                       l1104 075A                       l1106 075E  
                     l1220 0844                       l1212 085A                       l1108 0766  
                     l1060 0736                       l1062 0792                       l1214 07EC  
                     l1070 0824                       l1230 06F8                       l1224 084A  
                     l1064 0794                       l1216 07FA                       l1056 0720  
                     l1080 07C8                       l1072 0800                       l1240 071C  
                     l1232 06FC                       l1226 0856                       l1218 0838  
                     l1066 07A2                       l1090 077C                       l1250 0654  
                     l1058 0720                       l1082 07CC                       l1074 07D2  
                     l1234 0702                       l1092 0780                       l1260 0670  
                     l1252 0658                       l1244 062E                       l1076 07E4  
                     l1068 0812                       l1236 070C                       l1500 05AA  
                     l1094 0784                       l1086 076E                       l1270 0688  
                     l1262 0672                       l1254 065C                       l1246 0648  
                     l1078 07B4                       l1238 0712                       l1502 05B2  
                     l1510 05DC                       l1096 078C                       l1088 0772  
                     l1272 0862                       l1264 0676                       l1256 0668  
                     l1248 0650                       l1504 05B4                       l1520 0618  
                     l1512 05E4                       l1600 03AE                       l1266 067C  
                     l1258 066C                       l1450 03E2                       l1442 03BC  
                     l1530 0546                       l1098 0748                       l1610 06DC  
                     l1506 05BA                       l1522 061E                       l1514 05EC  
                     l1268 0682                       l1460 042A                       l1452 03F0  
                     l1444 03C0                       l1540 0550                       l1532 0548  
                     l1524 04C8                       l1604 06C6                       l1516 05FA  
                     l1508 05CA                       l1620 0014                       l1612 0000  
                     l1470 0474                       l1462 0432                       l1454 0400  
                     l1446 03CE                       l1534 054A                       l1526 0540  
                     l1606 06CA                       l1518 0610                       l1550 0232  
                     l1630 0048                       l1622 0024                       l1614 000C  
                     l1480 04A6                       l1472 0484                       l1464 043E  
                     l1456 0404                       l1448 03DE                       l1536 054C  
                     l1528 0544                       l1608 06D8                       l1560 0282  
                     l1552 023A                       l1544 0208                       l1640 0070  
                     l1632 0050                       l1624 0028                       l1616 000E  
                     l1482 04B6                       l1474 0486                       l1466 044C  
                     l1458 0414                       l1538 054E                       l1490 0570  
                     l1562 028A                       l1546 0214                       l1650 0108  
                     l1642 0078                       l1634 0058                       l1626 003C  
                     l1618 0010                       l1476 0490                       l1468 0456  
                     l1492 0578                       l1580 02DE                       l1564 0298  
                     l1556 023E                       l1548 0226                       l1660 01B4  
                     l1652 0116                       l1644 007E                       l1636 0060  
                     l1628 0040                       l1478 0496                       l1494 0580  
                     l1486 0556                       l1590 031E                       l1582 02F0  
                     l1574 02A8                       l1566 029C                       l1558 0272  
                     l1662 01C6                       l1654 0132                       l1646 00E6  
                     l1638 0068                       l1496 058E                       l1488 055E  
                     l1592 0366                       l1584 0306                       l1568 02A4  
                     l1664 01D4                       l1656 0142                       l1648 00F6  
                     l1498 0594                       l1594 0372                       l1586 0312  
                     l1578 02DC                       l1666 01F0                       l1658 0148  
                     l1596 0376                       l1588 0316                       l1598 0388  
                     STR_1 FFEF                       STR_2 FFDF                       _CREN 007D5C  
                     _LATE 000F8D                       _PEN2 007B12                       _RCIF 007CF5  
                     _SEN2 007B10                       _TRMT 007D61                       _date 0036  
                     _flag 0033                       _main 0000                       _hour 0038  
          BCD2UpperCh@temp 0002                       _year 0034                       fsr2h 000FDA  
                     indf2 000FDF                       fsr2l 000FD9                       prodh 000FF4  
                     prodl 000FF3                       start 0000              ??_i2c_restart 0001  
             ___param_bank 000000            __end_of_InitLCD 0690              ?_rtc1307_read 0001  
          __end_of___aldiv 04C8                      ?_main 0001            __end_of___lwdiv 05CA  
          __end_of___lwmod 062E                      _RCEN2 007B13                      _RCREG 000FAE  
                    _RSEN2 007B11                      _PORTE 000F84                      _TRISE 000F96  
                    _TXREG 000FAD                i2c_send@dat 0002                ?_UART_Write 0001  
          __end_of_dpowers FFDF                      _month 0035                      main@i 002C  
                    main@m 002B                      tablat 000FF5                      status 000FD8  
          __end_of_sprintf 03BC            _ToggleEpinOfLCD 0792            __initialization 0690  
           ??_rtc1307_read 0003               __end_of_main 0208           __end_of_i2c_read 07D0  
         __end_of_i2c_send 07EA           __end_of_i2c_wait 0746           __end_of_i2c_stop 0812  
      __end_of_i2c_restart 0836                     ??_main 0025           ??_ClearLCDScreen 0003  
            __activetblptr 000003               i2c_read@temp 0002           __end_of_aucCRCHi FFD5  
         __end_of_aucCRCLo FED5                     _SPBRG1 000FAF                     _TRISD0 007CA8  
                   _TRISC6 007CA6                     _TRISE2 007CB2                     _TRISC7 007CA7  
                   _TRISD5 007CAD                     _TRISD6 007CAE                     _TRISE4 007CB4  
                   _TRISE5 007CB5                     _TRISE6 007CB6                     _TRISE7 007CB7  
                ??_InitLCD 0003          __end_of_UART_Init 0556                  ??___aldiv 0009  
                ??___lwdiv 0005                  ??___lwmod 000C                     _buffer 0088  
                   clear_0 06AE                     clear_1 06BA          WriteStringToLCD@s 0003  
                   isa$std 000001               __pdataCOMRAM 003B          ?_WriteStringToLCD 0003  
             __mediumconst FDD4                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8         ??_WriteStringToLCD 0005                  ??_sprintf 001D  
  __end_of_ToggleEpinOfLCD 07B4                 __accesstop 0060    __end_of__initialization 06C0  
            ___rparam_used 000001             __pcstackCOMRAM 0001                _i2c_restart 0824  
            ??_BCD2LowerCh 0001          __end_of_i2c_start 0824   WriteCommandToLCD@Command 0002  
            ??_BCD2UpperCh 0001               ??_RS485_Init 0001       __end_of_rtc1307_read 0720  
               __pbssBANK0 0060                  ?_i2c_read 0001                  ?_i2c_send 0001  
                ?_i2c_wait 0001             _WriteDataToLCD 0746                  ?_i2c_stop 0001  
    WriteDataToLCD@LCDChar 0002         __end_of_RS485_Init 0862               ??_UART_Write 0001  
                  _SSP2ADD 000F65                    _SSP2BUF 000F66        __end_of_BCD2LowerCh 085A  
   __end_of_WriteDataToLCD 076C           ?_ToggleEpinOfLCD 0001        __end_of_BCD2UpperCh 0848  
               ??_i2c_read 0002                 ??_i2c_send 0002                 ??_i2c_wait 0001  
               ??_i2c_stop 0001                    _InitLCD 062E             BCD2LowerCh@bcd 0001  
                  __Hparam 0000                    __Lparam 0000                    ___aldiv 03BC  
       __end_of_UART_Write 0800                    ___lwdiv 0556                    ___lwmod 05CA  
                  __pcinit 0690                    __ramtop 1000                    __ptext0 0000  
                  __ptext1 0208                    __ptext2 05CA                    __ptext3 0556  
                  __ptext4 06F6                    __ptext5 0800                    __ptext6 0812  
                  __ptext7 07D0                    __ptext8 0824                    __ptext9 07B4  
                  _dpowers FFD5           ___aldiv@dividend 0001                    _sprintf 0208  
     end_of_initialization 06C0            ?_WriteDataToLCD 0001        UART_Write@UART_DATA 0001  
         ___aldiv@quotient 000B                    postdec2 000FDD                    postinc0 000FEE  
                  postinc2 000FDE                  _UART_Init 04C8                _BCD2LowerCh 0848  
                _TRISCbits 000F94                _BCD2UpperCh 0836                  _TRISDbits 000F95  
           BCD2UpperCh@bcd 0001               ?_i2c_restart 0001               _rtc1307_read 06F6  
               ?_UART_Init 000F              __pidataCOMRAM 086A        start_initialization 0690  
                _i2c_start 0812            _rx_overrun_flag 0031                __pbssCOMRAM 002D  
               ?_i2c_start 0001                sprintf@flag 0020                sprintf@prec 0021  
                 ?_InitLCD 0001           ___lwdiv@dividend 0001              __pmediumconst FDD4  
                 ?___aldiv 0001                   ?___lwdiv 0001                   ?___lwmod 0008  
              ??_UART_Init 0013           ??_WriteDataToLCD 0002           ___lwdiv@quotient 0005  
                 ?_sprintf 000D                 UART_Init@x 001B            ___aldiv@divisor 0005  
          ___aldiv@counter 0009                   _LATDbits 000F8C           _WriteStringToLCD 06C6  
          _buffer_max_size 003B                   _SSP2CON1 000F63                   _SSP2CON2 000F62  
                 _SSP2STAT 000F64          UART_Init@baudrate 000F               ?_BCD2LowerCh 0001  
             ?_BCD2UpperCh 0001                ??_i2c_start 0001             _ClearLCDScreen 0862  
        _WriteCommandToLCD 076C                   _i2c_read 07B4                   _i2c_send 07D0  
                 _i2c_wait 0720                   _i2c_stop 0800         ?_WriteCommandToLCD 0001  
          BCD2LowerCh@temp 0002                   __Hrparam 0000                   __Lrparam 0000  
      ??_WriteCommandToLCD 0002                   _aucCRCHi FED5                   _aucCRCLo FDD5  
               sprintf@val 0022            ___lwdiv@divisor 0003     __end_of_ClearLCDScreen 086A  
          ___lwdiv@counter 0007                   __ptext10 0720                   __ptext11 06C6  
                 __ptext20 0792                   __ptext12 0746                   __ptext21 0836  
                 __ptext13 07EA                   __ptext22 0848                   __ptext14 04C8  
                 __ptext15 03BC                   __ptext16 085A                   __ptext17 062E  
                 __ptext18 0862                   __ptext19 076C  __end_of_WriteCommandToLCD 0792  
             _SSP2CON2bits 000F62                   isa$xinst 000000          ??_ToggleEpinOfLCD 0001  
               _RS485_Init 085A            ?_ClearLCDScreen 0001                  sprintf@ap 001E  
                sprintf@sp 000D           ___lwmod@dividend 0008                 _RCSTA1bits 000FAB  
                 sprintf@c 0024                   sprintf@f 000F   __end_of_WriteStringToLCD 06F6  
          ___lwmod@divisor 000A            ___lwmod@counter 000C               ___aldiv@sign 000A  
               _UART_Write 07EA        rtc1307_read@address 0003          rtc1307_read@temp1 0004  
